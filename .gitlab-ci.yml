variables:
  PYTHONUNBUFFERED: "1"
default:
  interruptible: true

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web"'
    # Cfr. Workflows/MergeRequest-Pipelines.gitlab-ci.yml template
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

stages:
  - containers
  - build
  - test
  - certification-dummy
  - certification-turris-omnia
  - certification-turris-omnia-bhwifi
  - certification-axepoint
  - certification-axepoint-bhwifi
  - upload

.image-build:
  stage: containers
  tags:
    - shell
    - docker-build
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - if [ "$CI_COMMIT_BRANCH" = "master" ]; then latest_tag="--tag latest"; fi
    - ./tools/docker/image-build.sh --image "${CI_JOB_NAME#image-build-}" --tag $CI_PIPELINE_ID $latest_tag --push
  retry: 2


.build-for-openwrt:
  stage: build
  script:
    - mkdir -p "build/$TARGET_DEVICE"
    - tools/docker/builder/openwrt/build.sh --verbose -d "$TARGET_DEVICE" -t "prplmesh-builder-$TARGET_DEVICE:$CI_COMMIT_SHORT_SHA-$CI_PIPELINE_ID" 2>&1 | tee "build/$TARGET_DEVICE/openwrt-build.log"
  artifacts:
    paths:
      - "build/$TARGET_DEVICE/"
    expire_in: 4 weeks
    when: always
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
    - if: "$CI_MERGE_REQUEST_LABELS =~ /.*ready for merge.*/"
    - when: manual
  tags:
    - shell
    - docker-build
  needs: []

build-for-turris-omnia:
  extends: .build-for-openwrt
  variables:
    TARGET_DEVICE: "turris-omnia"

run-certification-tests:
  interruptible: false
  stage: test
  variables:
    TESTS_TO_RUN: MAP-4.2.1 MAP-4.2.3_ETH_FH24G MAP-4.3.1_ETH
    GIT_CLONE_PATH: "/builds/prpl-foundation/prplmesh/prplMesh/"
    # device to test with: prplmesh for dummy bwl, axepoint for dwpal on axepoint
    DEVICE_UNDER_TEST: "turris-omnia"
  script:
    - |
      if [ "$DEVICE_UNDER_TEST" = axepoint ] ; then
          tools/deploy_firmware.py --device axepoint --target-name "$DEVICE_UNDER_TEST" --image AX3000_1600_ETH_11AXUCI-squashfs-fullimage.img
          echo "Deploying to $DEVICE_UNDER_TEST"
          tools/deploy_ipk.sh --certification-mode $DEVICE_UNDER_TEST build/$DEVICE_UNDER_TEST/prplmesh.ipk
      fi
    - ci/git-clean-reset.sh /easymesh_cert "$(<"ci/easymesh_cert_version")"
    - sudo /easymesh_cert/run_test_file.py --upload-results  --verbose --log-folder logs --device-under-test $DEVICE_UNDER_TEST $TESTS_TO_RUN
  artifacts:
    paths:
      - logs
    when: always
  needs:
    - job: build-for-turris-omnia
  tags:
    - certs-tests-essensium
