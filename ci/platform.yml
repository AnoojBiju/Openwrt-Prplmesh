###############################################################
# SPDX-License-Identifier: BSD-2-Clause-Patent
# SPDX-FileCopyrightText: 2019-2020 the prplMesh contributors (see AUTHORS.md)
# This code is subject to the terms of the BSD+Patent license.
# See LICENSE file for more details.
###############################################################

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "parent_pipeline"'

stages:
  - build
  - test
  - certification-turris-omnia
  - certification-turris-omnia-bhwifi
  - certification-axepoint
  - certification-axepoint-bhwifi

include:
  - local: "/ci/templates.yml"
  - local: "/ci/certification/turris-omnia.yml"
  - local: "/ci/certification/turris-omnia-bhwifi.yml"
  - local: "/ci/certification/axepoint.yml"
  - local: "/ci/certification/axepoint-bhwifi.yml"

build-for-rdkb-turris-omnia:
  extends: .build-for-rdkb
  variables:
    TARGET_DEVICE: "turris-omnia"
  retry: 2

build-for-turris-omnia:
  extends: .build-for-openwrt
  variables:
    TARGET_DEVICE: "turris-omnia"

build-for-glinet-b1300:
  extends: .build-for-openwrt
  variables:
    TARGET_DEVICE: "glinet-b1300"

build-for-netgear-rax40:
  extends: .build-for-openwrt
  variables:
    TARGET_DEVICE: "netgear-rax40"

build-for-axepoint:
  extends: .build-for-openwrt
  variables:
    TARGET_DEVICE: "axepoint"

test-on-turris-omnia:
  extends: .test-on-target
  variables:
    TARGET_DEVICE: turris-omnia
    TARGET_DEVICE_NAME: turris-omnia-1
    OPENWRT_IMAGE: openwrt-mvebu-cortexa9-cznic_turris-omnia-sysupgrade.img.gz
  needs: ["build-for-turris-omnia"]

test-on-glinet-b1300:
  extends: .test-on-target
  variables:
    TARGET_DEVICE: glinet-b1300
    TARGET_DEVICE_NAME: glinet-b1300-1
    OPENWRT_IMAGE: openwrt-ipq40xx-generic-glinet_gl-b1300-squashfs-sysupgrade.bin
  needs: ["build-for-glinet-b1300"]

boardfarm-on-netgear-rax40:
  extends: .test-on-target
  variables:
    TARGET_DEVICE: netgear-rax40
    TARGET_DEVICE_NAME: netgear-rax40-1
    OPENWRT_IMAGE: NETGEAR_RAX40-squashfs-fullimage.img
  script:
    - |
        echo "Retrieving the job ID for 'build-in-docker'."
        PARENT_PIPELINE_JOBS_URL="$CI_API_V4_URL/projects/$CI_PROJECT_ID/pipelines/$PARENT_PIPELINE_ID/jobs?per_page=100"
        echo "PARENT_PIPELINE_JOBS_URL: $PARENT_PIPELINE_JOBS_URL"
        BUILD_IN_DOCKER_JOB_ID=$(curl  --retry 3 --location --header "PRIVATE-TOKEN: $ARTIFACTS_DOWNLOADER_TOKEN" "$PARENT_PIPELINE_JOBS_URL" | jq -c '.[] | select( .name == "build-in-docker" ) | .id')
        echo "BUILD_IN_DOCKER_JOB_ID: $BUILD_IN_DOCKER_JOB_ID"
        BUILD_IN_DOCKER_DOWNLOAD_URL="$CI_API_V4_URL/projects/$CI_PROJECT_ID/jobs/$BUILD_IN_DOCKER_JOB_ID/artifacts"
        echo "BUILD_IN_DOCKER_DOWNLOAD_URL: $BUILD_IN_DOCKER_DOWNLOAD_URL"
        echo "Downloading 'build-in-docker' artifacts."
        curl --location  --header "PRIVATE-TOKEN: $ARTIFACTS_DOWNLOADER_TOKEN" "$BUILD_IN_DOCKER_DOWNLOAD_URL" --output artifacts.zip
        unzip artifacts.zip && rm artifacts.zip
        echo Done
    # TODO: set the BH iface in UCI once https://jira.prplfoundation.org/browse/PPM-230 is done:
    - ssh "$TARGET_DEVICE_NAME" "sed -ri 's/backhaul_wire_iface=eth1/backhaul_wire_iface=eth0_1/' /opt/prplmesh/config/beerocks_agent.conf"
    - ./dctest.py --dut netgear-rax40-1 --test-suite test_flows_on_prplwrt
    - |
      # Reset the device to controller mode to not break existing test-on-netgear-rax40:
      ssh "$TARGET_DEVICE_NAME" <<'EOF'
        uci set prplmesh.config.management_mode='Multi-AP-Controller-and-Agent'
        uci set prplmesh.config.operating_mode='Gateway'
        uci set prplmesh.config.wired_backhaul=0
        uci set prplmesh.config.master=1
        uci set prplmesh.config.gateway=1
        uci commit prplmesh
      EOF
  needs:
    - build-for-netgear-rax40

run-certification-tests-platform-essensium:
  extends: .run-certification-tests
  tags:
    - certs-tests-essensium
  needs:
    - job: build-for-axepoint
    - job: build-for-turris-omnia
  rules:
    - if: '$TESTS_TO_RUN && $DEVICE_UNDER_TEST != "prplmesh" && $WFA_CERTIFICATION_RUNNER == "ESSENSIUM"'

run-certification-tests-platform-isr:
  extends: .run-certification-tests
  tags:
    - certs-tests-isr
  needs:
    - job: build-for-axepoint
    - job: build-for-turris-omnia
  rules:
    - if: '$TESTS_TO_RUN && $DEVICE_UNDER_TEST != "prplmesh" && $WFA_CERTIFICATION_RUNNER == "ISR"'
