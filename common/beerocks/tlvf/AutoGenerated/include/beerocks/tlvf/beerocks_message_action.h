///////////////////////////////////////
// AUTO GENERATED FILE - DO NOT EDIT //
///////////////////////////////////////

/* SPDX-License-Identifier: BSD-2-Clause-Patent
 *
 * SPDX-FileCopyrightText: 2016-2020 the prplMesh contributors (see AUTHORS.md)
 *
 * This code is subject to the terms of the BSD+Patent license.
 * See LICENSE file for more details.
 */

#ifndef _BEEROCKS_TLVF_BEEROCKS_MESSAGE_ACTION_H_
#define _BEEROCKS_TLVF_BEEROCKS_MESSAGE_ACTION_H_

#include <cstddef>
#include <stdint.h>
#include <tlvf/swap.h>
#include <ostream>

namespace beerocks_message {

enum eAction: uint8_t {
    ACTION_NONE = 0x0,
    ACTION_1905_VS = 0x1,
    ACTION_CONTROL = 0xa,
    ACTION_BACKHAUL = 0xb,
    ACTION_PLATFORM = 0xc,
    ACTION_APMANAGER = 0x14,
    ACTION_MONITOR = 0x1e,
    ACTION_DHCP = 0x28,
    ACTION_CLI = 0x32,
    ACTION_BML = 0x3c,
};
// Enum AutoPrint generated code snippet begining- DON'T EDIT!
// clang-format off
static const char *eAction_str(eAction enum_value) {
    switch (enum_value) {
    case ACTION_NONE:      return "ACTION_NONE";
    case ACTION_1905_VS:   return "ACTION_1905_VS";
    case ACTION_CONTROL:   return "ACTION_CONTROL";
    case ACTION_BACKHAUL:  return "ACTION_BACKHAUL";
    case ACTION_PLATFORM:  return "ACTION_PLATFORM";
    case ACTION_APMANAGER: return "ACTION_APMANAGER";
    case ACTION_MONITOR:   return "ACTION_MONITOR";
    case ACTION_DHCP:      return "ACTION_DHCP";
    case ACTION_CLI:       return "ACTION_CLI";
    case ACTION_BML:       return "ACTION_BML";
    }
    static std::string out_str = std::to_string(int(enum_value));
    return out_str.c_str();
}
inline std::ostream &operator<<(std::ostream &out, eAction value) { return out << eAction_str(value); }
// clang-format on
// Enum AutoPrint generated code snippet end

enum eActionOp_1905_VS: uint8_t {
    ACTION_TLV_VENDOR_SPECIFIC = 0xb,
};
// Enum AutoPrint generated code snippet begining- DON'T EDIT!
// clang-format off
static const char *eActionOp_1905_VS_str(eActionOp_1905_VS enum_value) {
    switch (enum_value) {
    case ACTION_TLV_VENDOR_SPECIFIC: return "ACTION_TLV_VENDOR_SPECIFIC";
    }
    static std::string out_str = std::to_string(int(enum_value));
    return out_str.c_str();
}
inline std::ostream &operator<<(std::ostream &out, eActionOp_1905_VS value) { return out << eActionOp_1905_VS_str(value); }
// clang-format on
// Enum AutoPrint generated code snippet end

enum eActionOp_CONTROL: uint8_t {
    ACTION_CONTROL_NONE = 0x0,
    ACTION_CONTROL_SLAVE_HANDSHAKE_REQUEST = 0x1,
    ACTION_CONTROL_SLAVE_HANDSHAKE_RESPONSE = 0x2,
    ACTION_CONTROL_SLAVE_JOINED_NOTIFICATION = 0x3,
    ACTION_CONTROL_SLAVE_JOINED_RESPONSE = 0x4,
    ACTION_CONTROL_CHANGE_MODULE_LOGGING_LEVEL = 0xb,
    ACTION_CONTROL_ARP_QUERY_REQUEST = 0xc,
    ACTION_CONTROL_ARP_QUERY_RESPONSE = 0xd,
    ACTION_CONTROL_HOSTAP_CSA_ERROR_NOTIFICATION = 0x36,
    ACTION_CONTROL_HOSTAP_CSA_NOTIFICATION = 0x37,
    ACTION_CONTROL_HOSTAP_ACS_NOTIFICATION = 0x39,
    ACTION_CONTROL_HOSTAP_DFS_CAC_COMPLETED_NOTIFICATION = 0x3a,
    ACTION_CONTROL_HOSTAP_DFS_CHANNEL_AVAILABLE_NOTIFICATION = 0x3b,
    ACTION_CONTROL_HOSTAP_STATS_MEASUREMENT_REQUEST = 0x3c,
    ACTION_CONTROL_HOSTAP_STATS_MEASUREMENT_RESPONSE = 0x3d,
    ACTION_CONTROL_HOSTAP_LOAD_MEASUREMENT_NOTIFICATION = 0x3e,
    ACTION_CONTROL_HOSTAP_SET_NEIGHBOR_11K_REQUEST = 0x3f,
    ACTION_CONTROL_HOSTAP_REMOVE_NEIGHBOR_11K_REQUEST = 0x40,
    ACTION_CONTROL_HOSTAP_SET_RESTRICTED_FAILSAFE_CHANNEL_REQUEST = 0x41,
    ACTION_CONTROL_HOSTAP_SET_RESTRICTED_FAILSAFE_CHANNEL_RESPONSE = 0x42,
    ACTION_CONTROL_HOSTAP_CHANNEL_SWITCH_ACS_START = 0x43,
    ACTION_CONTROL_HOSTAP_UPDATE_STOP_ON_FAILURE_ATTEMPTS_REQUEST = 0x44,
    ACTION_CONTROL_HOSTAP_ACTIVITY_NOTIFICATION = 0x46,
    ACTION_CONTROL_HOSTAP_VAPS_LIST_UPDATE_NOTIFICATION = 0x47,
    ACTION_CONTROL_HOSTAP_AP_DISABLED_NOTIFICATION = 0x48,
    ACTION_CONTROL_HOSTAP_AP_ENABLED_NOTIFICATION = 0x49,
    ACTION_CONTROL_CLIENT_START_MONITORING_REQUEST = 0x64,
    ACTION_CONTROL_CLIENT_START_MONITORING_RESPONSE = 0x65,
    ACTION_CONTROL_CLIENT_RX_RSSI_MEASUREMENT_REQUEST = 0x67,
    ACTION_CONTROL_CLIENT_RX_RSSI_MEASUREMENT_RESPONSE = 0x68,
    ACTION_CONTROL_CLIENT_RX_RSSI_MEASUREMENT_START_NOTIFICATION = 0x69,
    ACTION_CONTROL_CLIENT_RX_RSSI_MEASUREMENT_NOTIFICATION = 0x6a,
    ACTION_CONTROL_CLIENT_NO_RESPONSE_NOTIFICATION = 0x6b,
    ACTION_CONTROL_CLIENT_NEW_IP_ADDRESS_NOTIFICATION = 0x6c,
    ACTION_CONTROL_CLIENT_DISCONNECT_REQUEST = 0x6f,
    ACTION_CONTROL_CLIENT_DISCONNECT_RESPONSE = 0x70,
    ACTION_CONTROL_CLIENT_DHCP_COMPLETE_NOTIFICATION = 0x73,
    ACTION_CONTROL_CLIENT_ARP_MONITOR_NOTIFICATION = 0x74,
    ACTION_CONTROL_CLIENT_BEACON_11K_REQUEST = 0x75,
    ACTION_CONTROL_CLIENT_BEACON_11K_RESPONSE = 0x76,
    ACTION_CONTROL_CLIENT_RX_RSSI_MEASUREMENT_CMD_RESPONSE = 0x7d,
    ACTION_CONTROL_CLIENT_NO_ACTIVITY_NOTIFICATION = 0x7e,
    ACTION_CONTROL_STEERING_CLIENT_SET_GROUP_REQUEST = 0x7f,
    ACTION_CONTROL_STEERING_CLIENT_SET_GROUP_RESPONSE = 0x80,
    ACTION_CONTROL_STEERING_CLIENT_SET_REQUEST = 0x81,
    ACTION_CONTROL_STEERING_CLIENT_SET_RESPONSE = 0x82,
    ACTION_CONTROL_STEERING_EVENT_CLIENT_ACTIVITY_NOTIFICATION = 0x83,
    ACTION_CONTROL_STEERING_EVENT_SNR_XING_NOTIFICATION = 0x84,
    ACTION_CONTROL_STEERING_EVENT_PROBE_REQ_NOTIFICATION = 0x85,
    ACTION_CONTROL_STEERING_EVENT_AUTH_FAIL_NOTIFICATION = 0x86,
    ACTION_CONTROL_CHANNEL_SCAN_TRIGGER_SCAN_REQUEST = 0x8c,
    ACTION_CONTROL_CHANNEL_SCAN_TRIGGER_SCAN_RESPONSE = 0x8d,
    ACTION_CONTROL_CHANNEL_SCAN_DUMP_RESULTS_REQUEST = 0x8e,
    ACTION_CONTROL_CHANNEL_SCAN_TRIGGERED_NOTIFICATION = 0x90,
    ACTION_CONTROL_CHANNEL_SCAN_RESULTS_NOTIFICATION = 0x91,
    ACTION_CONTROL_CHANNEL_SCAN_ABORT_NOTIFICATION = 0x92,
    ACTION_CONTROL_CHANNEL_SCAN_FINISHED_NOTIFICATION = 0x93,
    ACTION_CONTROL_ENUM_END = 0x94,
};
// Enum AutoPrint generated code snippet begining- DON'T EDIT!
// clang-format off
static const char *eActionOp_CONTROL_str(eActionOp_CONTROL enum_value) {
    switch (enum_value) {
    case ACTION_CONTROL_NONE:                                            return "ACTION_CONTROL_NONE";
    case ACTION_CONTROL_SLAVE_HANDSHAKE_REQUEST:                         return "ACTION_CONTROL_SLAVE_HANDSHAKE_REQUEST";
    case ACTION_CONTROL_SLAVE_HANDSHAKE_RESPONSE:                        return "ACTION_CONTROL_SLAVE_HANDSHAKE_RESPONSE";
    case ACTION_CONTROL_SLAVE_JOINED_NOTIFICATION:                       return "ACTION_CONTROL_SLAVE_JOINED_NOTIFICATION";
    case ACTION_CONTROL_SLAVE_JOINED_RESPONSE:                           return "ACTION_CONTROL_SLAVE_JOINED_RESPONSE";
    case ACTION_CONTROL_CHANGE_MODULE_LOGGING_LEVEL:                     return "ACTION_CONTROL_CHANGE_MODULE_LOGGING_LEVEL";
    case ACTION_CONTROL_ARP_QUERY_REQUEST:                               return "ACTION_CONTROL_ARP_QUERY_REQUEST";
    case ACTION_CONTROL_ARP_QUERY_RESPONSE:                              return "ACTION_CONTROL_ARP_QUERY_RESPONSE";
    case ACTION_CONTROL_HOSTAP_CSA_ERROR_NOTIFICATION:                   return "ACTION_CONTROL_HOSTAP_CSA_ERROR_NOTIFICATION";
    case ACTION_CONTROL_HOSTAP_CSA_NOTIFICATION:                         return "ACTION_CONTROL_HOSTAP_CSA_NOTIFICATION";
    case ACTION_CONTROL_HOSTAP_ACS_NOTIFICATION:                         return "ACTION_CONTROL_HOSTAP_ACS_NOTIFICATION";
    case ACTION_CONTROL_HOSTAP_DFS_CAC_COMPLETED_NOTIFICATION:           return "ACTION_CONTROL_HOSTAP_DFS_CAC_COMPLETED_NOTIFICATION";
    case ACTION_CONTROL_HOSTAP_DFS_CHANNEL_AVAILABLE_NOTIFICATION:       return "ACTION_CONTROL_HOSTAP_DFS_CHANNEL_AVAILABLE_NOTIFICATION";
    case ACTION_CONTROL_HOSTAP_STATS_MEASUREMENT_REQUEST:                return "ACTION_CONTROL_HOSTAP_STATS_MEASUREMENT_REQUEST";
    case ACTION_CONTROL_HOSTAP_STATS_MEASUREMENT_RESPONSE:               return "ACTION_CONTROL_HOSTAP_STATS_MEASUREMENT_RESPONSE";
    case ACTION_CONTROL_HOSTAP_LOAD_MEASUREMENT_NOTIFICATION:            return "ACTION_CONTROL_HOSTAP_LOAD_MEASUREMENT_NOTIFICATION";
    case ACTION_CONTROL_HOSTAP_SET_NEIGHBOR_11K_REQUEST:                 return "ACTION_CONTROL_HOSTAP_SET_NEIGHBOR_11K_REQUEST";
    case ACTION_CONTROL_HOSTAP_REMOVE_NEIGHBOR_11K_REQUEST:              return "ACTION_CONTROL_HOSTAP_REMOVE_NEIGHBOR_11K_REQUEST";
    case ACTION_CONTROL_HOSTAP_SET_RESTRICTED_FAILSAFE_CHANNEL_REQUEST:  return "ACTION_CONTROL_HOSTAP_SET_RESTRICTED_FAILSAFE_CHANNEL_REQUEST";
    case ACTION_CONTROL_HOSTAP_SET_RESTRICTED_FAILSAFE_CHANNEL_RESPONSE: return "ACTION_CONTROL_HOSTAP_SET_RESTRICTED_FAILSAFE_CHANNEL_RESPONSE";
    case ACTION_CONTROL_HOSTAP_CHANNEL_SWITCH_ACS_START:                 return "ACTION_CONTROL_HOSTAP_CHANNEL_SWITCH_ACS_START";
    case ACTION_CONTROL_HOSTAP_UPDATE_STOP_ON_FAILURE_ATTEMPTS_REQUEST:  return "ACTION_CONTROL_HOSTAP_UPDATE_STOP_ON_FAILURE_ATTEMPTS_REQUEST";
    case ACTION_CONTROL_HOSTAP_ACTIVITY_NOTIFICATION:                    return "ACTION_CONTROL_HOSTAP_ACTIVITY_NOTIFICATION";
    case ACTION_CONTROL_HOSTAP_VAPS_LIST_UPDATE_NOTIFICATION:            return "ACTION_CONTROL_HOSTAP_VAPS_LIST_UPDATE_NOTIFICATION";
    case ACTION_CONTROL_HOSTAP_AP_DISABLED_NOTIFICATION:                 return "ACTION_CONTROL_HOSTAP_AP_DISABLED_NOTIFICATION";
    case ACTION_CONTROL_HOSTAP_AP_ENABLED_NOTIFICATION:                  return "ACTION_CONTROL_HOSTAP_AP_ENABLED_NOTIFICATION";
    case ACTION_CONTROL_CLIENT_START_MONITORING_REQUEST:                 return "ACTION_CONTROL_CLIENT_START_MONITORING_REQUEST";
    case ACTION_CONTROL_CLIENT_START_MONITORING_RESPONSE:                return "ACTION_CONTROL_CLIENT_START_MONITORING_RESPONSE";
    case ACTION_CONTROL_CLIENT_RX_RSSI_MEASUREMENT_REQUEST:              return "ACTION_CONTROL_CLIENT_RX_RSSI_MEASUREMENT_REQUEST";
    case ACTION_CONTROL_CLIENT_RX_RSSI_MEASUREMENT_RESPONSE:             return "ACTION_CONTROL_CLIENT_RX_RSSI_MEASUREMENT_RESPONSE";
    case ACTION_CONTROL_CLIENT_RX_RSSI_MEASUREMENT_START_NOTIFICATION:   return "ACTION_CONTROL_CLIENT_RX_RSSI_MEASUREMENT_START_NOTIFICATION";
    case ACTION_CONTROL_CLIENT_RX_RSSI_MEASUREMENT_NOTIFICATION:         return "ACTION_CONTROL_CLIENT_RX_RSSI_MEASUREMENT_NOTIFICATION";
    case ACTION_CONTROL_CLIENT_NO_RESPONSE_NOTIFICATION:                 return "ACTION_CONTROL_CLIENT_NO_RESPONSE_NOTIFICATION";
    case ACTION_CONTROL_CLIENT_NEW_IP_ADDRESS_NOTIFICATION:              return "ACTION_CONTROL_CLIENT_NEW_IP_ADDRESS_NOTIFICATION";
    case ACTION_CONTROL_CLIENT_DISCONNECT_REQUEST:                       return "ACTION_CONTROL_CLIENT_DISCONNECT_REQUEST";
    case ACTION_CONTROL_CLIENT_DISCONNECT_RESPONSE:                      return "ACTION_CONTROL_CLIENT_DISCONNECT_RESPONSE";
    case ACTION_CONTROL_CLIENT_DHCP_COMPLETE_NOTIFICATION:               return "ACTION_CONTROL_CLIENT_DHCP_COMPLETE_NOTIFICATION";
    case ACTION_CONTROL_CLIENT_ARP_MONITOR_NOTIFICATION:                 return "ACTION_CONTROL_CLIENT_ARP_MONITOR_NOTIFICATION";
    case ACTION_CONTROL_CLIENT_BEACON_11K_REQUEST:                       return "ACTION_CONTROL_CLIENT_BEACON_11K_REQUEST";
    case ACTION_CONTROL_CLIENT_BEACON_11K_RESPONSE:                      return "ACTION_CONTROL_CLIENT_BEACON_11K_RESPONSE";
    case ACTION_CONTROL_CLIENT_RX_RSSI_MEASUREMENT_CMD_RESPONSE:         return "ACTION_CONTROL_CLIENT_RX_RSSI_MEASUREMENT_CMD_RESPONSE";
    case ACTION_CONTROL_CLIENT_NO_ACTIVITY_NOTIFICATION:                 return "ACTION_CONTROL_CLIENT_NO_ACTIVITY_NOTIFICATION";
    case ACTION_CONTROL_STEERING_CLIENT_SET_GROUP_REQUEST:               return "ACTION_CONTROL_STEERING_CLIENT_SET_GROUP_REQUEST";
    case ACTION_CONTROL_STEERING_CLIENT_SET_GROUP_RESPONSE:              return "ACTION_CONTROL_STEERING_CLIENT_SET_GROUP_RESPONSE";
    case ACTION_CONTROL_STEERING_CLIENT_SET_REQUEST:                     return "ACTION_CONTROL_STEERING_CLIENT_SET_REQUEST";
    case ACTION_CONTROL_STEERING_CLIENT_SET_RESPONSE:                    return "ACTION_CONTROL_STEERING_CLIENT_SET_RESPONSE";
    case ACTION_CONTROL_STEERING_EVENT_CLIENT_ACTIVITY_NOTIFICATION:     return "ACTION_CONTROL_STEERING_EVENT_CLIENT_ACTIVITY_NOTIFICATION";
    case ACTION_CONTROL_STEERING_EVENT_SNR_XING_NOTIFICATION:            return "ACTION_CONTROL_STEERING_EVENT_SNR_XING_NOTIFICATION";
    case ACTION_CONTROL_STEERING_EVENT_PROBE_REQ_NOTIFICATION:           return "ACTION_CONTROL_STEERING_EVENT_PROBE_REQ_NOTIFICATION";
    case ACTION_CONTROL_STEERING_EVENT_AUTH_FAIL_NOTIFICATION:           return "ACTION_CONTROL_STEERING_EVENT_AUTH_FAIL_NOTIFICATION";
    case ACTION_CONTROL_CHANNEL_SCAN_TRIGGER_SCAN_REQUEST:               return "ACTION_CONTROL_CHANNEL_SCAN_TRIGGER_SCAN_REQUEST";
    case ACTION_CONTROL_CHANNEL_SCAN_TRIGGER_SCAN_RESPONSE:              return "ACTION_CONTROL_CHANNEL_SCAN_TRIGGER_SCAN_RESPONSE";
    case ACTION_CONTROL_CHANNEL_SCAN_DUMP_RESULTS_REQUEST:               return "ACTION_CONTROL_CHANNEL_SCAN_DUMP_RESULTS_REQUEST";
    case ACTION_CONTROL_CHANNEL_SCAN_TRIGGERED_NOTIFICATION:             return "ACTION_CONTROL_CHANNEL_SCAN_TRIGGERED_NOTIFICATION";
    case ACTION_CONTROL_CHANNEL_SCAN_RESULTS_NOTIFICATION:               return "ACTION_CONTROL_CHANNEL_SCAN_RESULTS_NOTIFICATION";
    case ACTION_CONTROL_CHANNEL_SCAN_ABORT_NOTIFICATION:                 return "ACTION_CONTROL_CHANNEL_SCAN_ABORT_NOTIFICATION";
    case ACTION_CONTROL_CHANNEL_SCAN_FINISHED_NOTIFICATION:              return "ACTION_CONTROL_CHANNEL_SCAN_FINISHED_NOTIFICATION";
    case ACTION_CONTROL_ENUM_END:                                        return "ACTION_CONTROL_ENUM_END";
    }
    static std::string out_str = std::to_string(int(enum_value));
    return out_str.c_str();
}
inline std::ostream &operator<<(std::ostream &out, eActionOp_CONTROL value) { return out << eActionOp_CONTROL_str(value); }
// clang-format on
// Enum AutoPrint generated code snippet end

enum eActionOp_BACKHAUL: uint8_t {
    ACTION_BACKHAUL_REGISTER_REQUEST = 0x0,
    ACTION_BACKHAUL_REGISTER_RESPONSE = 0x1,
    ACTION_BACKHAUL_ENABLE = 0x2,
    ACTION_BACKHAUL_CONNECTED_NOTIFICATION = 0x3,
    ACTION_BACKHAUL_DISCONNECTED_NOTIFICATION = 0x4,
    ACTION_BACKHAUL_UPDATE_STOP_ON_FAILURE_ATTEMPTS_REQUEST = 0x9,
    ACTION_BACKHAUL_AP_DISABLED_NOTIFICATION = 0xa,
    ACTION_BACKHAUL_ENABLE_APS_REQUEST = 0xc,
    ACTION_BACKHAUL_HOSTAP_VAPS_LIST_UPDATE_NOTIFICATION = 0xe,
    ACTION_BACKHAUL_CLIENT_ASSOCIATED_NOTIFICATION = 0xf,
    ACTION_BACKHAUL_CLIENT_DISCONNECTED_NOTIFICATION = 0x10,
    ACTION_BACKHAUL_START_WPS_PBC_REQUEST = 0x11,
    ACTION_BACKHAUL_ZWDFS_RADIO_DETECTED = 0x12,
    ACTION_BACKHAUL_RADIO_DISABLE_REQUEST = 0x13,
    ACTION_BACKHAUL_SET_ASSOC_DISALLOW_REQUEST = 0x14,
    ACTION_BACKHAUL_RADIO_TEAR_DOWN_REQUEST = 0x15,
    ACTION_BACKHAUL_APPLY_VLAN_POLICY_REQUEST = 0x16,
    ACTION_BACKHAUL_CLIENT_RX_RSSI_MEASUREMENT_REQUEST = 0x1e,
    ACTION_BACKHAUL_CLIENT_RX_RSSI_MEASUREMENT_RESPONSE = 0x1f,
    ACTION_BACKHAUL_CLIENT_RX_RSSI_MEASUREMENT_CMD_RESPONSE = 0x20,
    ACTION_BACKHAUL_ASSOCIATED_STA_LINK_METRICS_REQUEST = 0x28,
    ACTION_BACKHAUL_ASSOCIATED_STA_LINK_METRICS_RESPONSE = 0x29,
    ACTION_BACKHAUL_CHANNELS_LIST_REQUEST = 0x32,
    ACTION_BACKHAUL_CHANNELS_LIST_RESPONSE = 0x33,
    ACTION_BACKHAUL_HOSTAP_CHANNEL_SWITCH_ACS_START = 0x3c,
    ACTION_BACKHAUL_HOSTAP_CSA_NOTIFICATION = 0x3d,
    ACTION_BACKHAUL_HOSTAP_CSA_ERROR_NOTIFICATION = 0x3e,
    ACTION_BACKHAUL_HOSTAP_DFS_CAC_STARTED_NOTIFICATION = 0x3f,
    ACTION_BACKHAUL_HOSTAP_DFS_CAC_COMPLETED_NOTIFICATION = 0x40,
    ACTION_BACKHAUL_HOSTAP_ZWDFS_ANT_CHANNEL_SWITCH_REQUEST = 0x41,
    ACTION_BACKHAUL_HOSTAP_ZWDFS_ANT_CHANNEL_SWITCH_RESPONSE = 0x42,
    ACTION_BACKHAUL_HOSTAP_CANCEL_ACTIVE_CAC_REQUEST = 0x43,
    ACTION_BACKHAUL_HOSTAP_CANCEL_ACTIVE_CAC_RESPONSE = 0x44,
    ACTION_BACKHAUL_CHANNEL_SCAN_TRIGGER_SCAN_REQUEST = 0x46,
    ACTION_BACKHAUL_CHANNEL_SCAN_TRIGGER_SCAN_RESPONSE = 0x47,
    ACTION_BACKHAUL_CHANNEL_SCAN_DUMP_RESULTS_REQUEST = 0x48,
    ACTION_BACKHAUL_CHANNEL_SCAN_DUMP_RESULTS_RESPONSE = 0x49,
    ACTION_BACKHAUL_CHANNEL_SCAN_TRIGGERED_NOTIFICATION = 0x4a,
    ACTION_BACKHAUL_CHANNEL_SCAN_RESULTS_NOTIFICATION = 0x4b,
    ACTION_BACKHAUL_CHANNEL_SCAN_ABORT_REQUEST = 0x4c,
    ACTION_BACKHAUL_CHANNEL_SCAN_ABORT_RESPONSE = 0x4d,
    ACTION_BACKHAUL_CHANNEL_SCAN_ABORTED_NOTIFICATION = 0x4e,
    ACTION_BACKHAUL_CHANNEL_SCAN_FINISHED_NOTIFICATION = 0x4f,
    ACTION_BACKHAUL_DISCONNECT_COMMAND = 0x50,
    ACTION_BACKHAUL_ENUM_END = 0x51,
};
// Enum AutoPrint generated code snippet begining- DON'T EDIT!
// clang-format off
static const char *eActionOp_BACKHAUL_str(eActionOp_BACKHAUL enum_value) {
    switch (enum_value) {
    case ACTION_BACKHAUL_REGISTER_REQUEST:                         return "ACTION_BACKHAUL_REGISTER_REQUEST";
    case ACTION_BACKHAUL_REGISTER_RESPONSE:                        return "ACTION_BACKHAUL_REGISTER_RESPONSE";
    case ACTION_BACKHAUL_ENABLE:                                   return "ACTION_BACKHAUL_ENABLE";
    case ACTION_BACKHAUL_CONNECTED_NOTIFICATION:                   return "ACTION_BACKHAUL_CONNECTED_NOTIFICATION";
    case ACTION_BACKHAUL_DISCONNECTED_NOTIFICATION:                return "ACTION_BACKHAUL_DISCONNECTED_NOTIFICATION";
    case ACTION_BACKHAUL_UPDATE_STOP_ON_FAILURE_ATTEMPTS_REQUEST:  return "ACTION_BACKHAUL_UPDATE_STOP_ON_FAILURE_ATTEMPTS_REQUEST";
    case ACTION_BACKHAUL_AP_DISABLED_NOTIFICATION:                 return "ACTION_BACKHAUL_AP_DISABLED_NOTIFICATION";
    case ACTION_BACKHAUL_ENABLE_APS_REQUEST:                       return "ACTION_BACKHAUL_ENABLE_APS_REQUEST";
    case ACTION_BACKHAUL_HOSTAP_VAPS_LIST_UPDATE_NOTIFICATION:     return "ACTION_BACKHAUL_HOSTAP_VAPS_LIST_UPDATE_NOTIFICATION";
    case ACTION_BACKHAUL_CLIENT_ASSOCIATED_NOTIFICATION:           return "ACTION_BACKHAUL_CLIENT_ASSOCIATED_NOTIFICATION";
    case ACTION_BACKHAUL_CLIENT_DISCONNECTED_NOTIFICATION:         return "ACTION_BACKHAUL_CLIENT_DISCONNECTED_NOTIFICATION";
    case ACTION_BACKHAUL_START_WPS_PBC_REQUEST:                    return "ACTION_BACKHAUL_START_WPS_PBC_REQUEST";
    case ACTION_BACKHAUL_ZWDFS_RADIO_DETECTED:                     return "ACTION_BACKHAUL_ZWDFS_RADIO_DETECTED";
    case ACTION_BACKHAUL_RADIO_DISABLE_REQUEST:                    return "ACTION_BACKHAUL_RADIO_DISABLE_REQUEST";
    case ACTION_BACKHAUL_SET_ASSOC_DISALLOW_REQUEST:               return "ACTION_BACKHAUL_SET_ASSOC_DISALLOW_REQUEST";
    case ACTION_BACKHAUL_RADIO_TEAR_DOWN_REQUEST:                  return "ACTION_BACKHAUL_RADIO_TEAR_DOWN_REQUEST";
    case ACTION_BACKHAUL_APPLY_VLAN_POLICY_REQUEST:                return "ACTION_BACKHAUL_APPLY_VLAN_POLICY_REQUEST";
    case ACTION_BACKHAUL_CLIENT_RX_RSSI_MEASUREMENT_REQUEST:       return "ACTION_BACKHAUL_CLIENT_RX_RSSI_MEASUREMENT_REQUEST";
    case ACTION_BACKHAUL_CLIENT_RX_RSSI_MEASUREMENT_RESPONSE:      return "ACTION_BACKHAUL_CLIENT_RX_RSSI_MEASUREMENT_RESPONSE";
    case ACTION_BACKHAUL_CLIENT_RX_RSSI_MEASUREMENT_CMD_RESPONSE:  return "ACTION_BACKHAUL_CLIENT_RX_RSSI_MEASUREMENT_CMD_RESPONSE";
    case ACTION_BACKHAUL_ASSOCIATED_STA_LINK_METRICS_REQUEST:      return "ACTION_BACKHAUL_ASSOCIATED_STA_LINK_METRICS_REQUEST";
    case ACTION_BACKHAUL_ASSOCIATED_STA_LINK_METRICS_RESPONSE:     return "ACTION_BACKHAUL_ASSOCIATED_STA_LINK_METRICS_RESPONSE";
    case ACTION_BACKHAUL_CHANNELS_LIST_REQUEST:                    return "ACTION_BACKHAUL_CHANNELS_LIST_REQUEST";
    case ACTION_BACKHAUL_CHANNELS_LIST_RESPONSE:                   return "ACTION_BACKHAUL_CHANNELS_LIST_RESPONSE";
    case ACTION_BACKHAUL_HOSTAP_CHANNEL_SWITCH_ACS_START:          return "ACTION_BACKHAUL_HOSTAP_CHANNEL_SWITCH_ACS_START";
    case ACTION_BACKHAUL_HOSTAP_CSA_NOTIFICATION:                  return "ACTION_BACKHAUL_HOSTAP_CSA_NOTIFICATION";
    case ACTION_BACKHAUL_HOSTAP_CSA_ERROR_NOTIFICATION:            return "ACTION_BACKHAUL_HOSTAP_CSA_ERROR_NOTIFICATION";
    case ACTION_BACKHAUL_HOSTAP_DFS_CAC_STARTED_NOTIFICATION:      return "ACTION_BACKHAUL_HOSTAP_DFS_CAC_STARTED_NOTIFICATION";
    case ACTION_BACKHAUL_HOSTAP_DFS_CAC_COMPLETED_NOTIFICATION:    return "ACTION_BACKHAUL_HOSTAP_DFS_CAC_COMPLETED_NOTIFICATION";
    case ACTION_BACKHAUL_HOSTAP_ZWDFS_ANT_CHANNEL_SWITCH_REQUEST:  return "ACTION_BACKHAUL_HOSTAP_ZWDFS_ANT_CHANNEL_SWITCH_REQUEST";
    case ACTION_BACKHAUL_HOSTAP_ZWDFS_ANT_CHANNEL_SWITCH_RESPONSE: return "ACTION_BACKHAUL_HOSTAP_ZWDFS_ANT_CHANNEL_SWITCH_RESPONSE";
    case ACTION_BACKHAUL_HOSTAP_CANCEL_ACTIVE_CAC_REQUEST:         return "ACTION_BACKHAUL_HOSTAP_CANCEL_ACTIVE_CAC_REQUEST";
    case ACTION_BACKHAUL_HOSTAP_CANCEL_ACTIVE_CAC_RESPONSE:        return "ACTION_BACKHAUL_HOSTAP_CANCEL_ACTIVE_CAC_RESPONSE";
    case ACTION_BACKHAUL_CHANNEL_SCAN_TRIGGER_SCAN_REQUEST:        return "ACTION_BACKHAUL_CHANNEL_SCAN_TRIGGER_SCAN_REQUEST";
    case ACTION_BACKHAUL_CHANNEL_SCAN_TRIGGER_SCAN_RESPONSE:       return "ACTION_BACKHAUL_CHANNEL_SCAN_TRIGGER_SCAN_RESPONSE";
    case ACTION_BACKHAUL_CHANNEL_SCAN_DUMP_RESULTS_REQUEST:        return "ACTION_BACKHAUL_CHANNEL_SCAN_DUMP_RESULTS_REQUEST";
    case ACTION_BACKHAUL_CHANNEL_SCAN_DUMP_RESULTS_RESPONSE:       return "ACTION_BACKHAUL_CHANNEL_SCAN_DUMP_RESULTS_RESPONSE";
    case ACTION_BACKHAUL_CHANNEL_SCAN_TRIGGERED_NOTIFICATION:      return "ACTION_BACKHAUL_CHANNEL_SCAN_TRIGGERED_NOTIFICATION";
    case ACTION_BACKHAUL_CHANNEL_SCAN_RESULTS_NOTIFICATION:        return "ACTION_BACKHAUL_CHANNEL_SCAN_RESULTS_NOTIFICATION";
    case ACTION_BACKHAUL_CHANNEL_SCAN_ABORT_REQUEST:               return "ACTION_BACKHAUL_CHANNEL_SCAN_ABORT_REQUEST";
    case ACTION_BACKHAUL_CHANNEL_SCAN_ABORT_RESPONSE:              return "ACTION_BACKHAUL_CHANNEL_SCAN_ABORT_RESPONSE";
    case ACTION_BACKHAUL_CHANNEL_SCAN_ABORTED_NOTIFICATION:        return "ACTION_BACKHAUL_CHANNEL_SCAN_ABORTED_NOTIFICATION";
    case ACTION_BACKHAUL_CHANNEL_SCAN_FINISHED_NOTIFICATION:       return "ACTION_BACKHAUL_CHANNEL_SCAN_FINISHED_NOTIFICATION";
    case ACTION_BACKHAUL_DISCONNECT_COMMAND:                       return "ACTION_BACKHAUL_DISCONNECT_COMMAND";
    case ACTION_BACKHAUL_ENUM_END:                                 return "ACTION_BACKHAUL_ENUM_END";
    }
    static std::string out_str = std::to_string(int(enum_value));
    return out_str.c_str();
}
inline std::ostream &operator<<(std::ostream &out, eActionOp_BACKHAUL value) { return out << eActionOp_BACKHAUL_str(value); }
// clang-format on
// Enum AutoPrint generated code snippet end

enum eActionOp_PLATFORM: uint8_t {
    ACTION_PLATFORM_SON_SLAVE_REGISTER_REQUEST = 0x0,
    ACTION_PLATFORM_SON_SLAVE_REGISTER_RESPONSE = 0x1,
    ACTION_PLATFORM_ARP_MONITOR_NOTIFICATION = 0x4,
    ACTION_PLATFORM_DHCP_MONITOR_NOTIFICATION = 0x5,
    ACTION_PLATFORM_CHANGE_MODULE_LOGGING_LEVEL = 0x6,
    ACTION_PLATFORM_ARP_QUERY_REQUEST = 0x8,
    ACTION_PLATFORM_ARP_QUERY_RESPONSE = 0x9,
    ACTION_PLATFORM_ONBOARD_QUERY_REQUEST = 0xa,
    ACTION_PLATFORM_ONBOARD_QUERY_RESPONSE = 0xb,
    ACTION_PLATFORM_WIFI_CREDENTIALS_GET_REQUEST = 0xe,
    ACTION_PLATFORM_WIFI_CREDENTIALS_GET_RESPONSE = 0xf,
    ACTION_PLATFORM_ADMIN_CREDENTIALS_GET_REQUEST = 0x10,
    ACTION_PLATFORM_ADMIN_CREDENTIALS_GET_RESPONSE = 0x11,
    ACTION_PLATFORM_LOCAL_MASTER_GET_REQUEST = 0x14,
    ACTION_PLATFORM_LOCAL_MASTER_GET_RESPONSE = 0x15,
    ACTION_PLATFORM_WLAN_PARAMS_CHANGED_NOTIFICATION = 0x1a,
    ACTION_PLATFORM_ONBOARD_SET_REQUEST = 0x24,
    ACTION_PLATFORM_WPS_ONBOARDING_REQUEST = 0x25,
    ACTION_PLATFORM_GET_MASTER_SLAVE_VERSIONS_REQUEST = 0x32,
    ACTION_PLATFORM_GET_MASTER_SLAVE_VERSIONS_RESPONSE = 0x33,
    ACTION_PLATFORM_MASTER_SLAVE_VERSIONS_NOTIFICATION = 0x35,
    ACTION_PLATFORM_SON_SLAVE_BACKHAUL_CONNECTION_COMPLETE_NOTIFICATION = 0x36,
    ACTION_PLATFORM_ERROR_NOTIFICATION = 0x64,
    ACTION_PLATFORM_ENUM_END = 0x65,
};
// Enum AutoPrint generated code snippet begining- DON'T EDIT!
// clang-format off
static const char *eActionOp_PLATFORM_str(eActionOp_PLATFORM enum_value) {
    switch (enum_value) {
    case ACTION_PLATFORM_SON_SLAVE_REGISTER_REQUEST:                          return "ACTION_PLATFORM_SON_SLAVE_REGISTER_REQUEST";
    case ACTION_PLATFORM_SON_SLAVE_REGISTER_RESPONSE:                         return "ACTION_PLATFORM_SON_SLAVE_REGISTER_RESPONSE";
    case ACTION_PLATFORM_ARP_MONITOR_NOTIFICATION:                            return "ACTION_PLATFORM_ARP_MONITOR_NOTIFICATION";
    case ACTION_PLATFORM_DHCP_MONITOR_NOTIFICATION:                           return "ACTION_PLATFORM_DHCP_MONITOR_NOTIFICATION";
    case ACTION_PLATFORM_CHANGE_MODULE_LOGGING_LEVEL:                         return "ACTION_PLATFORM_CHANGE_MODULE_LOGGING_LEVEL";
    case ACTION_PLATFORM_ARP_QUERY_REQUEST:                                   return "ACTION_PLATFORM_ARP_QUERY_REQUEST";
    case ACTION_PLATFORM_ARP_QUERY_RESPONSE:                                  return "ACTION_PLATFORM_ARP_QUERY_RESPONSE";
    case ACTION_PLATFORM_ONBOARD_QUERY_REQUEST:                               return "ACTION_PLATFORM_ONBOARD_QUERY_REQUEST";
    case ACTION_PLATFORM_ONBOARD_QUERY_RESPONSE:                              return "ACTION_PLATFORM_ONBOARD_QUERY_RESPONSE";
    case ACTION_PLATFORM_WIFI_CREDENTIALS_GET_REQUEST:                        return "ACTION_PLATFORM_WIFI_CREDENTIALS_GET_REQUEST";
    case ACTION_PLATFORM_WIFI_CREDENTIALS_GET_RESPONSE:                       return "ACTION_PLATFORM_WIFI_CREDENTIALS_GET_RESPONSE";
    case ACTION_PLATFORM_ADMIN_CREDENTIALS_GET_REQUEST:                       return "ACTION_PLATFORM_ADMIN_CREDENTIALS_GET_REQUEST";
    case ACTION_PLATFORM_ADMIN_CREDENTIALS_GET_RESPONSE:                      return "ACTION_PLATFORM_ADMIN_CREDENTIALS_GET_RESPONSE";
    case ACTION_PLATFORM_LOCAL_MASTER_GET_REQUEST:                            return "ACTION_PLATFORM_LOCAL_MASTER_GET_REQUEST";
    case ACTION_PLATFORM_LOCAL_MASTER_GET_RESPONSE:                           return "ACTION_PLATFORM_LOCAL_MASTER_GET_RESPONSE";
    case ACTION_PLATFORM_WLAN_PARAMS_CHANGED_NOTIFICATION:                    return "ACTION_PLATFORM_WLAN_PARAMS_CHANGED_NOTIFICATION";
    case ACTION_PLATFORM_ONBOARD_SET_REQUEST:                                 return "ACTION_PLATFORM_ONBOARD_SET_REQUEST";
    case ACTION_PLATFORM_WPS_ONBOARDING_REQUEST:                              return "ACTION_PLATFORM_WPS_ONBOARDING_REQUEST";
    case ACTION_PLATFORM_GET_MASTER_SLAVE_VERSIONS_REQUEST:                   return "ACTION_PLATFORM_GET_MASTER_SLAVE_VERSIONS_REQUEST";
    case ACTION_PLATFORM_GET_MASTER_SLAVE_VERSIONS_RESPONSE:                  return "ACTION_PLATFORM_GET_MASTER_SLAVE_VERSIONS_RESPONSE";
    case ACTION_PLATFORM_MASTER_SLAVE_VERSIONS_NOTIFICATION:                  return "ACTION_PLATFORM_MASTER_SLAVE_VERSIONS_NOTIFICATION";
    case ACTION_PLATFORM_SON_SLAVE_BACKHAUL_CONNECTION_COMPLETE_NOTIFICATION: return "ACTION_PLATFORM_SON_SLAVE_BACKHAUL_CONNECTION_COMPLETE_NOTIFICATION";
    case ACTION_PLATFORM_ERROR_NOTIFICATION:                                  return "ACTION_PLATFORM_ERROR_NOTIFICATION";
    case ACTION_PLATFORM_ENUM_END:                                            return "ACTION_PLATFORM_ENUM_END";
    }
    static std::string out_str = std::to_string(int(enum_value));
    return out_str.c_str();
}
inline std::ostream &operator<<(std::ostream &out, eActionOp_PLATFORM value) { return out << eActionOp_PLATFORM_str(value); }
// clang-format on
// Enum AutoPrint generated code snippet end

enum eActionOp_APMANAGER: uint8_t {
    ACTION_APMANAGER_UP_NOTIFICATION = 0x0,
    ACTION_APMANAGER_CONFIGURE = 0x1,
    ACTION_APMANAGER_JOINED_NOTIFICATION = 0x2,
    ACTION_APMANAGER_ENABLE_APS_REQUEST = 0x3,
    ACTION_APMANAGER_ENABLE_APS_RESPONSE = 0x4,
    ACTION_APMANAGER_ACK = 0x5,
    ACTION_APMANAGER_HOSTAP_CHANNEL_SWITCH_ACS_START = 0xc,
    ACTION_APMANAGER_HOSTAP_CSA_ERROR_NOTIFICATION = 0xd,
    ACTION_APMANAGER_HOSTAP_CSA_NOTIFICATION = 0xe,
    ACTION_APMANAGER_HOSTAP_ACS_NOTIFICATION = 0x10,
    ACTION_APMANAGER_HOSTAP_SET_NEIGHBOR_11K_REQUEST = 0x11,
    ACTION_APMANAGER_HOSTAP_REMOVE_NEIGHBOR_11K_REQUEST = 0x12,
    ACTION_APMANAGER_HOSTAP_DFS_CAC_STARTED_NOTIFICATION = 0x13,
    ACTION_APMANAGER_HOSTAP_DFS_CAC_COMPLETED_NOTIFICATION = 0x14,
    ACTION_APMANAGER_HOSTAP_DFS_CHANNEL_AVAILABLE_NOTIFICATION = 0x15,
    ACTION_APMANAGER_HOSTAP_SET_RESTRICTED_FAILSAFE_CHANNEL_REQUEST = 0x18,
    ACTION_APMANAGER_HOSTAP_SET_RESTRICTED_FAILSAFE_CHANNEL_RESPONSE = 0x19,
    ACTION_APMANAGER_HOSTAP_AP_DISABLED_NOTIFICATION = 0x1a,
    ACTION_APMANAGER_HOSTAP_AP_ENABLED_NOTIFICATION = 0x1b,
    ACTION_APMANAGER_HOSTAP_VAPS_LIST_UPDATE_REQUEST = 0x1c,
    ACTION_APMANAGER_HOSTAP_VAPS_LIST_UPDATE_NOTIFICATION = 0x1d,
    ACTION_APMANAGER_HOSTAP_GENERATE_CLIENT_ASSOCIATION_NOTIFICATIONS_REQUEST = 0x1e,
    ACTION_APMANAGER_HOSTAP_ZWDFS_ANT_CHANNEL_SWITCH_REQUEST = 0x1f,
    ACTION_APMANAGER_HOSTAP_ZWDFS_ANT_CHANNEL_SWITCH_RESPONSE = 0x20,
    ACTION_APMANAGER_HOSTAP_SET_PRIMARY_VLAN_ID_REQUEST = 0x21,
    ACTION_APMANAGER_HOSTAP_CANCEL_ACTIVE_CAC_REQUEST = 0x22,
    ACTION_APMANAGER_HOSTAP_CANCEL_ACTIVE_CAC_RESPONSE = 0x23,
    ACTION_APMANAGER_CLIENT_ASSOCIATED_NOTIFICATION = 0x28,
    ACTION_APMANAGER_CLIENT_DISCONNECTED_NOTIFICATION = 0x29,
    ACTION_APMANAGER_CLIENT_DISCONNECT_REQUEST = 0x2a,
    ACTION_APMANAGER_CLIENT_DISCONNECT_RESPONSE = 0x2b,
    ACTION_APMANAGER_CLIENT_DISALLOW_REQUEST = 0x2c,
    ACTION_APMANAGER_CLIENT_ALLOW_REQUEST = 0x2d,
    ACTION_APMANAGER_CLIENT_RX_RSSI_MEASUREMENT_REQUEST = 0x2e,
    ACTION_APMANAGER_CLIENT_RX_RSSI_MEASUREMENT_RESPONSE = 0x2f,
    ACTION_APMANAGER_CLIENT_BSS_STEER_REQUEST = 0x30,
    ACTION_APMANAGER_CLIENT_BSS_STEER_RESPONSE = 0x31,
    ACTION_APMANAGER_CLIENT_RX_RSSI_MEASUREMENT_CMD_RESPONSE = 0x32,
    ACTION_APMANAGER_STEERING_CLIENT_SET_REQUEST = 0x33,
    ACTION_APMANAGER_STEERING_CLIENT_SET_RESPONSE = 0x34,
    ACTION_APMANAGER_STEERING_EVENT_PROBE_REQ_NOTIFICATION = 0x35,
    ACTION_APMANAGER_STEERING_EVENT_AUTH_FAIL_NOTIFICATION = 0x36,
    ACTION_APMANAGER_WIFI_CREDENTIALS_UPDATE_REQUEST = 0x37,
    ACTION_APMANAGER_WIFI_CREDENTIALS_UPDATE_RESPONSE = 0x38,
    ACTION_APMANAGER_START_WPS_PBC_REQUEST = 0x39,
    ACTION_APMANAGER_RADIO_DISABLE_REQUEST = 0x3a,
    ACTION_APMANAGER_SET_ASSOC_DISALLOW_REQUEST = 0x3b,
    ACTION_APMANAGER_HEARTBEAT_NOTIFICATION = 0x46,
    ACTION_APMANAGER_CHANNELS_LIST_REQUEST = 0x47,
    ACTION_APMANAGER_CHANNELS_LIST_RESPONSE = 0x48,
    ACTION_APMANAGER_SET_MAP_CONTROLLER_PROFILE = 0x49,
    ACTION_APMANAGER_ENUM_END = 0x49,
};

enum eActionOp_MONITOR: uint8_t {
    ACTION_MONITOR_JOINED_NOTIFICATION = 0x0,
    ACTION_MONITOR_SON_CONFIG_UPDATE = 0x1,
    ACTION_MONITOR_CHANGE_MODULE_LOGGING_LEVEL = 0x2,
    ACTION_MONITOR_HEARTBEAT_NOTIFICATION = 0x3,
    ACTION_MONITOR_HOSTAP_AP_DISABLED_NOTIFICATION = 0x4,
    ACTION_MONITOR_CLIENT_START_MONITORING_REQUEST = 0x14,
    ACTION_MONITOR_CLIENT_START_MONITORING_RESPONSE = 0x15,
    ACTION_MONITOR_CLIENT_RX_RSSI_MEASUREMENT_REQUEST = 0x17,
    ACTION_MONITOR_CLIENT_RX_RSSI_MEASUREMENT_NOTIFICATION = 0x19,
    ACTION_MONITOR_CLIENT_RX_RSSI_MEASUREMENT_RESPONSE = 0x1a,
    ACTION_MONITOR_CLIENT_NO_RESPONSE_NOTIFICATION = 0x1b,
    ACTION_MONITOR_CLIENT_RX_RSSI_MEASUREMENT_START_NOTIFICATION = 0x1c,
    ACTION_MONITOR_CLIENT_BEACON_11K_REQUEST = 0x1d,
    ACTION_MONITOR_CLIENT_BEACON_11K_RESPONSE = 0x1e,
    ACTION_MONITOR_CLIENT_CHANNEL_LOAD_11K_REQUEST = 0x1f,
    ACTION_MONITOR_CLIENT_CHANNEL_LOAD_11K_RESPONSE = 0x20,
    ACTION_MONITOR_CLIENT_RX_RSSI_MEASUREMENT_CMD_RESPONSE = 0x25,
    ACTION_MONITOR_CLIENT_NO_ACTIVITY_NOTIFICATION = 0x26,
    ACTION_MONITOR_CLIENT_NEW_IP_ADDRESS_NOTIFICATION = 0x27,
    ACTION_MONITOR_CLIENT_ASSOCIATED_STA_LINK_METRIC_REQUEST = 0x28,
    ACTION_MONITOR_CLIENT_ASSOCIATED_STA_LINK_METRIC_RESPONSE = 0x29,
    ACTION_MONITOR_HOSTAP_STATS_MEASUREMENT_REQUEST = 0x32,
    ACTION_MONITOR_HOSTAP_STATS_MEASUREMENT_RESPONSE = 0x33,
    ACTION_MONITOR_HOSTAP_LOAD_MEASUREMENT_NOTIFICATION = 0x34,
    ACTION_MONITOR_HOSTAP_ACTIVITY_NOTIFICATION = 0x35,
    ACTION_MONITOR_CHANNEL_SCAN_TRIGGER_SCAN_REQUEST = 0x3c,
    ACTION_MONITOR_CHANNEL_SCAN_TRIGGER_SCAN_RESPONSE = 0x3d,
    ACTION_MONITOR_CHANNEL_SCAN_TRIGGERED_NOTIFICATION = 0x3e,
    ACTION_MONITOR_CHANNEL_SCAN_DUMP_RESULTS_REQUEST = 0x3f,
    ACTION_MONITOR_CHANNEL_SCAN_DUMP_RESULTS_RESPONSE = 0x40,
    ACTION_MONITOR_CHANNEL_SCAN_RESULTS_NOTIFICATION = 0x41,
    ACTION_MONITOR_CHANNEL_SCAN_ABORT_REQUEST = 0x42,
    ACTION_MONITOR_CHANNEL_SCAN_ABORT_RESPONSE = 0x43,
    ACTION_MONITOR_CHANNEL_SCAN_ABORTED_NOTIFICATION = 0x44,
    ACTION_MONITOR_CHANNEL_SCAN_FINISHED_NOTIFICATION = 0x45,
    ACTION_MONITOR_STEERING_CLIENT_SET_GROUP_REQUEST = 0x50,
    ACTION_MONITOR_STEERING_CLIENT_SET_GROUP_RESPONSE = 0x51,
    ACTION_MONITOR_STEERING_CLIENT_SET_REQUEST = 0x52,
    ACTION_MONITOR_STEERING_CLIENT_SET_RESPONSE = 0x53,
    ACTION_MONITOR_STEERING_EVENT_CLIENT_ACTIVITY_NOTIFICATION = 0x54,
    ACTION_MONITOR_STEERING_EVENT_SNR_XING_NOTIFICATION = 0x55,
    ACTION_MONITOR_ENUM_END = 0x56,
};
// Enum AutoPrint generated code snippet begining- DON'T EDIT!
// clang-format off
static const char *eActionOp_MONITOR_str(eActionOp_MONITOR enum_value) {
    switch (enum_value) {
    case ACTION_MONITOR_JOINED_NOTIFICATION:                           return "ACTION_MONITOR_JOINED_NOTIFICATION";
    case ACTION_MONITOR_SON_CONFIG_UPDATE:                             return "ACTION_MONITOR_SON_CONFIG_UPDATE";
    case ACTION_MONITOR_CHANGE_MODULE_LOGGING_LEVEL:                   return "ACTION_MONITOR_CHANGE_MODULE_LOGGING_LEVEL";
    case ACTION_MONITOR_HEARTBEAT_NOTIFICATION:                        return "ACTION_MONITOR_HEARTBEAT_NOTIFICATION";
    case ACTION_MONITOR_HOSTAP_AP_DISABLED_NOTIFICATION:               return "ACTION_MONITOR_HOSTAP_AP_DISABLED_NOTIFICATION";
    case ACTION_MONITOR_CLIENT_START_MONITORING_REQUEST:               return "ACTION_MONITOR_CLIENT_START_MONITORING_REQUEST";
    case ACTION_MONITOR_CLIENT_START_MONITORING_RESPONSE:              return "ACTION_MONITOR_CLIENT_START_MONITORING_RESPONSE";
    case ACTION_MONITOR_CLIENT_RX_RSSI_MEASUREMENT_REQUEST:            return "ACTION_MONITOR_CLIENT_RX_RSSI_MEASUREMENT_REQUEST";
    case ACTION_MONITOR_CLIENT_RX_RSSI_MEASUREMENT_NOTIFICATION:       return "ACTION_MONITOR_CLIENT_RX_RSSI_MEASUREMENT_NOTIFICATION";
    case ACTION_MONITOR_CLIENT_RX_RSSI_MEASUREMENT_RESPONSE:           return "ACTION_MONITOR_CLIENT_RX_RSSI_MEASUREMENT_RESPONSE";
    case ACTION_MONITOR_CLIENT_NO_RESPONSE_NOTIFICATION:               return "ACTION_MONITOR_CLIENT_NO_RESPONSE_NOTIFICATION";
    case ACTION_MONITOR_CLIENT_RX_RSSI_MEASUREMENT_START_NOTIFICATION: return "ACTION_MONITOR_CLIENT_RX_RSSI_MEASUREMENT_START_NOTIFICATION";
    case ACTION_MONITOR_CLIENT_BEACON_11K_REQUEST:                     return "ACTION_MONITOR_CLIENT_BEACON_11K_REQUEST";
    case ACTION_MONITOR_CLIENT_BEACON_11K_RESPONSE:                    return "ACTION_MONITOR_CLIENT_BEACON_11K_RESPONSE";
    case ACTION_MONITOR_CLIENT_CHANNEL_LOAD_11K_REQUEST:               return "ACTION_MONITOR_CLIENT_CHANNEL_LOAD_11K_REQUEST";
    case ACTION_MONITOR_CLIENT_CHANNEL_LOAD_11K_RESPONSE:              return "ACTION_MONITOR_CLIENT_CHANNEL_LOAD_11K_RESPONSE";
    case ACTION_MONITOR_CLIENT_RX_RSSI_MEASUREMENT_CMD_RESPONSE:       return "ACTION_MONITOR_CLIENT_RX_RSSI_MEASUREMENT_CMD_RESPONSE";
    case ACTION_MONITOR_CLIENT_NO_ACTIVITY_NOTIFICATION:               return "ACTION_MONITOR_CLIENT_NO_ACTIVITY_NOTIFICATION";
    case ACTION_MONITOR_CLIENT_NEW_IP_ADDRESS_NOTIFICATION:            return "ACTION_MONITOR_CLIENT_NEW_IP_ADDRESS_NOTIFICATION";
    case ACTION_MONITOR_CLIENT_ASSOCIATED_STA_LINK_METRIC_REQUEST:     return "ACTION_MONITOR_CLIENT_ASSOCIATED_STA_LINK_METRIC_REQUEST";
    case ACTION_MONITOR_CLIENT_ASSOCIATED_STA_LINK_METRIC_RESPONSE:    return "ACTION_MONITOR_CLIENT_ASSOCIATED_STA_LINK_METRIC_RESPONSE";
    case ACTION_MONITOR_HOSTAP_STATS_MEASUREMENT_REQUEST:              return "ACTION_MONITOR_HOSTAP_STATS_MEASUREMENT_REQUEST";
    case ACTION_MONITOR_HOSTAP_STATS_MEASUREMENT_RESPONSE:             return "ACTION_MONITOR_HOSTAP_STATS_MEASUREMENT_RESPONSE";
    case ACTION_MONITOR_HOSTAP_LOAD_MEASUREMENT_NOTIFICATION:          return "ACTION_MONITOR_HOSTAP_LOAD_MEASUREMENT_NOTIFICATION";
    case ACTION_MONITOR_HOSTAP_ACTIVITY_NOTIFICATION:                  return "ACTION_MONITOR_HOSTAP_ACTIVITY_NOTIFICATION";
    case ACTION_MONITOR_CHANNEL_SCAN_TRIGGER_SCAN_REQUEST:             return "ACTION_MONITOR_CHANNEL_SCAN_TRIGGER_SCAN_REQUEST";
    case ACTION_MONITOR_CHANNEL_SCAN_TRIGGER_SCAN_RESPONSE:            return "ACTION_MONITOR_CHANNEL_SCAN_TRIGGER_SCAN_RESPONSE";
    case ACTION_MONITOR_CHANNEL_SCAN_TRIGGERED_NOTIFICATION:           return "ACTION_MONITOR_CHANNEL_SCAN_TRIGGERED_NOTIFICATION";
    case ACTION_MONITOR_CHANNEL_SCAN_DUMP_RESULTS_REQUEST:             return "ACTION_MONITOR_CHANNEL_SCAN_DUMP_RESULTS_REQUEST";
    case ACTION_MONITOR_CHANNEL_SCAN_DUMP_RESULTS_RESPONSE:            return "ACTION_MONITOR_CHANNEL_SCAN_DUMP_RESULTS_RESPONSE";
    case ACTION_MONITOR_CHANNEL_SCAN_RESULTS_NOTIFICATION:             return "ACTION_MONITOR_CHANNEL_SCAN_RESULTS_NOTIFICATION";
    case ACTION_MONITOR_CHANNEL_SCAN_ABORT_REQUEST:                    return "ACTION_MONITOR_CHANNEL_SCAN_ABORT_REQUEST";
    case ACTION_MONITOR_CHANNEL_SCAN_ABORT_RESPONSE:                   return "ACTION_MONITOR_CHANNEL_SCAN_ABORT_RESPONSE";
    case ACTION_MONITOR_CHANNEL_SCAN_ABORTED_NOTIFICATION:             return "ACTION_MONITOR_CHANNEL_SCAN_ABORTED_NOTIFICATION";
    case ACTION_MONITOR_CHANNEL_SCAN_FINISHED_NOTIFICATION:            return "ACTION_MONITOR_CHANNEL_SCAN_FINISHED_NOTIFICATION";
    case ACTION_MONITOR_STEERING_CLIENT_SET_GROUP_REQUEST:             return "ACTION_MONITOR_STEERING_CLIENT_SET_GROUP_REQUEST";
    case ACTION_MONITOR_STEERING_CLIENT_SET_GROUP_RESPONSE:            return "ACTION_MONITOR_STEERING_CLIENT_SET_GROUP_RESPONSE";
    case ACTION_MONITOR_STEERING_CLIENT_SET_REQUEST:                   return "ACTION_MONITOR_STEERING_CLIENT_SET_REQUEST";
    case ACTION_MONITOR_STEERING_CLIENT_SET_RESPONSE:                  return "ACTION_MONITOR_STEERING_CLIENT_SET_RESPONSE";
    case ACTION_MONITOR_STEERING_EVENT_CLIENT_ACTIVITY_NOTIFICATION:   return "ACTION_MONITOR_STEERING_EVENT_CLIENT_ACTIVITY_NOTIFICATION";
    case ACTION_MONITOR_STEERING_EVENT_SNR_XING_NOTIFICATION:          return "ACTION_MONITOR_STEERING_EVENT_SNR_XING_NOTIFICATION";
    case ACTION_MONITOR_ENUM_END:                                      return "ACTION_MONITOR_ENUM_END";
    }
    static std::string out_str = std::to_string(int(enum_value));
    return out_str.c_str();
}
inline std::ostream &operator<<(std::ostream &out, eActionOp_MONITOR value) { return out << eActionOp_MONITOR_str(value); }
// clang-format on
// Enum AutoPrint generated code snippet end

enum eActionOp_CLI: uint8_t {
    ACTION_CLI_RESPONSE_NONE = 0x0,
    ACTION_CLI_RESPONSE_STR = 0x1,
    ACTION_CLI_RESPONSE_INT = 0x2,
    ACTION_CLI_ENABLE_DEBUG = 0x3,
    ACTION_CLI_ENABLE_DIAGNOSTICS_MEASUREMENTS = 0x14,
    ACTION_CLI_SET_SLAVES_STOP_ON_FAILURE_ATTEMPTS = 0x15,
    ACTION_CLI_DUMP_NODE_INFO = 0x1e,
    ACTION_CLI_CROSS_RX_RSSI_MEASUREMENT = 0x1f,
    ACTION_CLI_OPTIMAL_PATH_TASK = 0x21,
    ACTION_CLI_LOAD_BALANCER_TASK = 0x22,
    ACTION_CLI_IRE_NETWORK_OPTIMIZATION_TASK = 0x23,
    ACTION_CLI_BACKHAUL_ROAM_REQUEST = 0x25,
    ACTION_CLI_CLIENT_ALLOW_REQUEST = 0x50,
    ACTION_CLI_CLIENT_DISALLOW_REQUEST = 0x51,
    ACTION_CLI_CLIENT_DISCONNECT_REQUEST = 0x52,
    ACTION_CLI_CLIENT_BSS_STEER_REQUEST = 0x53,
    ACTION_CLI_CLIENT_BEACON_11K_REQUEST = 0x56,
    ACTION_CLI_HOSTAP_CHANNEL_SWITCH_REQUEST = 0x7a,
    ACTION_CLI_HOSTAP_SET_NEIGHBOR_11K_REQUEST = 0x7b,
    ACTION_CLI_HOSTAP_REMOVE_NEIGHBOR_11K_REQUEST = 0x7c,
    ACTION_CLI_HOSTAP_STATS_MEASUREMENT = 0x7d,
    ACTION_CLI_ENUM_END = 0x7e,
};
// Enum AutoPrint generated code snippet begining- DON'T EDIT!
// clang-format off
static const char *eActionOp_CLI_str(eActionOp_CLI enum_value) {
    switch (enum_value) {
    case ACTION_CLI_RESPONSE_NONE:                       return "ACTION_CLI_RESPONSE_NONE";
    case ACTION_CLI_RESPONSE_STR:                        return "ACTION_CLI_RESPONSE_STR";
    case ACTION_CLI_RESPONSE_INT:                        return "ACTION_CLI_RESPONSE_INT";
    case ACTION_CLI_ENABLE_DEBUG:                        return "ACTION_CLI_ENABLE_DEBUG";
    case ACTION_CLI_ENABLE_DIAGNOSTICS_MEASUREMENTS:     return "ACTION_CLI_ENABLE_DIAGNOSTICS_MEASUREMENTS";
    case ACTION_CLI_SET_SLAVES_STOP_ON_FAILURE_ATTEMPTS: return "ACTION_CLI_SET_SLAVES_STOP_ON_FAILURE_ATTEMPTS";
    case ACTION_CLI_DUMP_NODE_INFO:                      return "ACTION_CLI_DUMP_NODE_INFO";
    case ACTION_CLI_CROSS_RX_RSSI_MEASUREMENT:           return "ACTION_CLI_CROSS_RX_RSSI_MEASUREMENT";
    case ACTION_CLI_OPTIMAL_PATH_TASK:                   return "ACTION_CLI_OPTIMAL_PATH_TASK";
    case ACTION_CLI_LOAD_BALANCER_TASK:                  return "ACTION_CLI_LOAD_BALANCER_TASK";
    case ACTION_CLI_IRE_NETWORK_OPTIMIZATION_TASK:       return "ACTION_CLI_IRE_NETWORK_OPTIMIZATION_TASK";
    case ACTION_CLI_BACKHAUL_ROAM_REQUEST:               return "ACTION_CLI_BACKHAUL_ROAM_REQUEST";
    case ACTION_CLI_CLIENT_ALLOW_REQUEST:                return "ACTION_CLI_CLIENT_ALLOW_REQUEST";
    case ACTION_CLI_CLIENT_DISALLOW_REQUEST:             return "ACTION_CLI_CLIENT_DISALLOW_REQUEST";
    case ACTION_CLI_CLIENT_DISCONNECT_REQUEST:           return "ACTION_CLI_CLIENT_DISCONNECT_REQUEST";
    case ACTION_CLI_CLIENT_BSS_STEER_REQUEST:            return "ACTION_CLI_CLIENT_BSS_STEER_REQUEST";
    case ACTION_CLI_CLIENT_BEACON_11K_REQUEST:           return "ACTION_CLI_CLIENT_BEACON_11K_REQUEST";
    case ACTION_CLI_HOSTAP_CHANNEL_SWITCH_REQUEST:       return "ACTION_CLI_HOSTAP_CHANNEL_SWITCH_REQUEST";
    case ACTION_CLI_HOSTAP_SET_NEIGHBOR_11K_REQUEST:     return "ACTION_CLI_HOSTAP_SET_NEIGHBOR_11K_REQUEST";
    case ACTION_CLI_HOSTAP_REMOVE_NEIGHBOR_11K_REQUEST:  return "ACTION_CLI_HOSTAP_REMOVE_NEIGHBOR_11K_REQUEST";
    case ACTION_CLI_HOSTAP_STATS_MEASUREMENT:            return "ACTION_CLI_HOSTAP_STATS_MEASUREMENT";
    case ACTION_CLI_ENUM_END:                            return "ACTION_CLI_ENUM_END";
    }
    static std::string out_str = std::to_string(int(enum_value));
    return out_str.c_str();
}
inline std::ostream &operator<<(std::ostream &out, eActionOp_CLI value) { return out << eActionOp_CLI_str(value); }
// clang-format on
// Enum AutoPrint generated code snippet end

enum eActionOp_BML: uint8_t {
    ACTION_BML_PING_REQUEST = 0x0,
    ACTION_BML_PING_RESPONSE = 0x1,
    ACTION_BML_NW_MAP_REQUEST = 0x2,
    ACTION_BML_NW_MAP_RESPONSE = 0x3,
    ACTION_BML_REGISTER_TO_NW_MAP_UPDATES_REQUEST = 0xa,
    ACTION_BML_UNREGISTER_FROM_NW_MAP_UPDATES_REQUEST = 0xc,
    ACTION_BML_REGISTER_TO_STATS_UPDATES_REQUEST = 0xe,
    ACTION_BML_UNREGISTER_FROM_STATS_UPDATES_REQUEST = 0x10,
    ACTION_BML_REGISTER_TO_EVENTS_UPDATES_REQUEST = 0x12,
    ACTION_BML_UNREGISTER_FROM_EVENTS_UPDATES_REQUEST = 0x14,
    ACTION_BML_NW_MAP_UPDATE = 0x1e,
    ACTION_BML_STATS_UPDATE = 0x1f,
    ACTION_BML_EVENTS_UPDATE = 0x20,
    ACTION_BML_SET_LEGACY_CLIENT_ROAMING_REQUEST = 0x38,
    ACTION_BML_SET_LEGACY_CLIENT_ROAMING_RESPONSE = 0x39,
    ACTION_BML_GET_LEGACY_CLIENT_ROAMING_REQUEST = 0x3a,
    ACTION_BML_GET_LEGACY_CLIENT_ROAMING_RESPONSE = 0x3b,
    ACTION_BML_SET_CLIENT_ROAMING_REQUEST = 0x3c,
    ACTION_BML_SET_CLIENT_ROAMING_RESPONSE = 0x3d,
    ACTION_BML_GET_CLIENT_ROAMING_REQUEST = 0x3e,
    ACTION_BML_GET_CLIENT_ROAMING_RESPONSE = 0x3f,
    ACTION_BML_SET_CLIENT_BAND_STEERING_REQUEST = 0x40,
    ACTION_BML_SET_CLIENT_BAND_STEERING_RESPONSE = 0x41,
    ACTION_BML_GET_CLIENT_BAND_STEERING_REQUEST = 0x42,
    ACTION_BML_GET_CLIENT_BAND_STEERING_RESPONSE = 0x43,
    ACTION_BML_SET_IRE_ROAMING_REQUEST = 0x44,
    ACTION_BML_SET_IRE_ROAMING_RESPONSE = 0x45,
    ACTION_BML_GET_IRE_ROAMING_REQUEST = 0x46,
    ACTION_BML_GET_IRE_ROAMING_RESPONSE = 0x47,
    ACTION_BML_SET_LOAD_BALANCER_REQUEST = 0x48,
    ACTION_BML_SET_LOAD_BALANCER_RESPONSE = 0x49,
    ACTION_BML_GET_LOAD_BALANCER_REQUEST = 0x4a,
    ACTION_BML_GET_LOAD_BALANCER_RESPONSE = 0x4b,
    ACTION_BML_SET_SERVICE_FAIRNESS_REQUEST = 0x4c,
    ACTION_BML_SET_SERVICE_FAIRNESS_RESPONSE = 0x4d,
    ACTION_BML_GET_SERVICE_FAIRNESS_REQUEST = 0x4e,
    ACTION_BML_GET_SERVICE_FAIRNESS_RESPONSE = 0x4f,
    ACTION_BML_SET_CLIENT_ROAMING_PREFER_SIGNAL_STRENGTH_REQUEST = 0x50,
    ACTION_BML_SET_CLIENT_ROAMING_PREFER_SIGNAL_STRENGTH_RESPONSE = 0x51,
    ACTION_BML_GET_CLIENT_ROAMING_PREFER_SIGNAL_STRENGTH_REQUEST = 0x52,
    ACTION_BML_GET_CLIENT_ROAMING_PREFER_SIGNAL_STRENGTH_RESPONSE = 0x53,
    ACTION_BML_SET_DFS_REENTRY_REQUEST = 0x54,
    ACTION_BML_SET_DFS_REENTRY_RESPONSE = 0x55,
    ACTION_BML_GET_DFS_REENTRY_REQUEST = 0x56,
    ACTION_BML_GET_DFS_REENTRY_RESPONSE = 0x57,
    ACTION_BML_SET_RESTRICTED_CHANNELS_REQUEST = 0x5c,
    ACTION_BML_SET_RESTRICTED_CHANNELS_RESPONSE = 0x5d,
    ACTION_BML_GET_RESTRICTED_CHANNELS_REQUEST = 0x5e,
    ACTION_BML_GET_RESTRICTED_CHANNELS_RESPONSE = 0x5f,
    ACTION_BML_SET_CERTIFICATION_MODE_REQUEST = 0x60,
    ACTION_BML_SET_CERTIFICATION_MODE_RESPONSE = 0x61,
    ACTION_BML_GET_CERTIFICATION_MODE_REQUEST = 0x62,
    ACTION_BML_GET_CERTIFICATION_MODE_RESPONSE = 0x63,
    ACTION_BML_WIFI_CREDENTIALS_SET_REQUEST = 0x6e,
    ACTION_BML_WIFI_CREDENTIALS_SET_RESPONSE = 0x6f,
    ACTION_BML_WIFI_CREDENTIALS_UPDATE_REQUEST = 0x70,
    ACTION_BML_WIFI_CREDENTIALS_UPDATE_RESPONSE = 0x71,
    ACTION_BML_WIFI_CREDENTIALS_CLEAR_REQUEST = 0x72,
    ACTION_BML_WIFI_CREDENTIALS_CLEAR_RESPONSE = 0x73,
    ACTION_BML_CHANGE_MODULE_LOGGING_LEVEL_REQUEST = 0x8c,
    ACTION_BML_CHANGE_MODULE_LOGGING_LEVEL_RESPONSE = 0x8d,
    ACTION_BML_SET_VAP_LIST_CREDENTIALS_REQUEST = 0x96,
    ACTION_BML_SET_VAP_LIST_CREDENTIALS_RESPONSE = 0x97,
    ACTION_BML_GET_VAP_LIST_CREDENTIALS_REQUEST = 0x98,
    ACTION_BML_GET_VAP_LIST_CREDENTIALS_RESPONSE = 0x99,
    ACTION_BML_STEERING_SET_GROUP_REQUEST = 0xa3,
    ACTION_BML_STEERING_SET_GROUP_RESPONSE = 0xa4,
    ACTION_BML_STEERING_CLIENT_SET_REQUEST = 0xa5,
    ACTION_BML_STEERING_CLIENT_SET_RESPONSE = 0xa6,
    ACTION_BML_STEERING_EVENT_REGISTER_UNREGISTER_REQUEST = 0xa7,
    ACTION_BML_STEERING_EVENT_REGISTER_UNREGISTER_RESPONSE = 0xa8,
    ACTION_BML_STEERING_CLIENT_DISCONNECT_REQUEST = 0xa9,
    ACTION_BML_STEERING_CLIENT_DISCONNECT_RESPONSE = 0xaa,
    ACTION_BML_STEERING_CLIENT_MEASURE_REQUEST = 0xab,
    ACTION_BML_STEERING_CLIENT_MEASURE_RESPONSE = 0xac,
    ACTION_BML_STEERING_EVENT_PROBE_REQ_NOTIFICATION = 0xb2,
    ACTION_BML_STEERING_EVENT_CLIENT_CONNECT_NOTIFICATION = 0xb3,
    ACTION_BML_STEERING_EVENT_CLIENT_DISCONNECT_NOTIFICATION = 0xb4,
    ACTION_BML_STEERING_EVENT_CLIENT_ACTIVITY_NOTIFICATION = 0xb5,
    ACTION_BML_STEERING_EVENT_SNR_XING_NOTIFICATION = 0xb6,
    ACTION_BML_STEERING_EVENT_SNR_NOTIFICATION = 0xb7,
    ACTION_BML_STEERING_EVENT_AUTH_FAIL_NOTIFICATION = 0xb8,
    ACTION_BML_STEERING_EVENTS_UPDATE = 0xb9,
    ACTION_BML_TRIGGER_TOPOLOGY_QUERY = 0xbf,
    ACTION_BML_TOPOLOGY_RESPONSE = 0xc0,
    ACTION_BML_REGISTER_TOPOLOGY_QUERY = 0xc1,
    ACTION_BML_UNREGISTER_TOPOLOGY_QUERY = 0xc2,
    ACTION_BML_TRIGGER_CHANNEL_SELECTION_REQUEST = 0xc3,
    ACTION_BML_TRIGGER_CHANNEL_SELECTION_RESPONSE = 0xc4,
    ACTION_BML_CHANNEL_SCAN_SET_CONTINUOUS_PARAMS_REQUEST = 0xc8,
    ACTION_BML_CHANNEL_SCAN_SET_CONTINUOUS_PARAMS_RESPONSE = 0xc9,
    ACTION_BML_CHANNEL_SCAN_GET_CONTINUOUS_PARAMS_REQUEST = 0xca,
    ACTION_BML_CHANNEL_SCAN_GET_CONTINUOUS_PARAMS_RESPONSE = 0xcb,
    ACTION_BML_CHANNEL_SCAN_SET_CONTINUOUS_ENABLE_REQUEST = 0xcc,
    ACTION_BML_CHANNEL_SCAN_SET_CONTINUOUS_ENABLE_RESPONSE = 0xcd,
    ACTION_BML_CHANNEL_SCAN_GET_CONTINUOUS_ENABLE_REQUEST = 0xce,
    ACTION_BML_CHANNEL_SCAN_GET_CONTINUOUS_ENABLE_RESPONSE = 0xcf,
    ACTION_BML_CHANNEL_SCAN_START_SCAN_REQUEST = 0xd0,
    ACTION_BML_CHANNEL_SCAN_START_SCAN_RESPONSE = 0xd1,
    ACTION_BML_CHANNEL_SCAN_GET_RESULTS_REQUEST = 0xd2,
    ACTION_BML_CHANNEL_SCAN_GET_RESULTS_RESPONSE = 0xd3,
    ACTION_BML_CLIENT_GET_CLIENT_LIST_REQUEST = 0xd7,
    ACTION_BML_CLIENT_GET_CLIENT_LIST_RESPONSE = 0xd8,
    ACTION_BML_CLIENT_SET_CLIENT_REQUEST = 0xd9,
    ACTION_BML_CLIENT_SET_CLIENT_RESPONSE = 0xda,
    ACTION_BML_CLIENT_GET_CLIENT_REQUEST = 0xdb,
    ACTION_BML_CLIENT_GET_CLIENT_RESPONSE = 0xdc,
    ACTION_BML_CLIENT_CLEAR_CLIENT_REQUEST = 0xdd,
    ACTION_BML_CLIENT_CLEAR_CLIENT_RESPONSE = 0xde,
    ACTION_BML_SET_CLIENT_ROAMING_11K_SUPPORT_REQUEST = 0xe1,
    ACTION_BML_SET_CLIENT_ROAMING_11K_SUPPORT_RESPONSE = 0xe2,
    ACTION_BML_GET_CLIENT_ROAMING_11K_SUPPORT_REQUEST = 0xe3,
    ACTION_BML_GET_CLIENT_ROAMING_11K_SUPPORT_RESPONSE = 0xe4,
    ACTION_BML_SET_SELECTION_CHANNEL_POOL_REQUEST = 0xe5,
    ACTION_BML_SET_SELECTION_CHANNEL_POOL_RESPONSE = 0xe6,
    ACTION_BML_GET_SELECTION_CHANNEL_POOL_REQUEST = 0xe7,
    ACTION_BML_GET_SELECTION_CHANNEL_POOL_RESPONSE = 0xe8,
    ACTION_BML_ENUM_END = 0xf0,
};
// Enum AutoPrint generated code snippet begining- DON'T EDIT!
// clang-format off
static const char *eActionOp_BML_str(eActionOp_BML enum_value) {
    switch (enum_value) {
    case ACTION_BML_PING_REQUEST:                                       return "ACTION_BML_PING_REQUEST";
    case ACTION_BML_PING_RESPONSE:                                      return "ACTION_BML_PING_RESPONSE";
    case ACTION_BML_NW_MAP_REQUEST:                                     return "ACTION_BML_NW_MAP_REQUEST";
    case ACTION_BML_NW_MAP_RESPONSE:                                    return "ACTION_BML_NW_MAP_RESPONSE";
    case ACTION_BML_REGISTER_TO_NW_MAP_UPDATES_REQUEST:                 return "ACTION_BML_REGISTER_TO_NW_MAP_UPDATES_REQUEST";
    case ACTION_BML_UNREGISTER_FROM_NW_MAP_UPDATES_REQUEST:             return "ACTION_BML_UNREGISTER_FROM_NW_MAP_UPDATES_REQUEST";
    case ACTION_BML_REGISTER_TO_STATS_UPDATES_REQUEST:                  return "ACTION_BML_REGISTER_TO_STATS_UPDATES_REQUEST";
    case ACTION_BML_UNREGISTER_FROM_STATS_UPDATES_REQUEST:              return "ACTION_BML_UNREGISTER_FROM_STATS_UPDATES_REQUEST";
    case ACTION_BML_REGISTER_TO_EVENTS_UPDATES_REQUEST:                 return "ACTION_BML_REGISTER_TO_EVENTS_UPDATES_REQUEST";
    case ACTION_BML_UNREGISTER_FROM_EVENTS_UPDATES_REQUEST:             return "ACTION_BML_UNREGISTER_FROM_EVENTS_UPDATES_REQUEST";
    case ACTION_BML_NW_MAP_UPDATE:                                      return "ACTION_BML_NW_MAP_UPDATE";
    case ACTION_BML_STATS_UPDATE:                                       return "ACTION_BML_STATS_UPDATE";
    case ACTION_BML_EVENTS_UPDATE:                                      return "ACTION_BML_EVENTS_UPDATE";
    case ACTION_BML_SET_LEGACY_CLIENT_ROAMING_REQUEST:                  return "ACTION_BML_SET_LEGACY_CLIENT_ROAMING_REQUEST";
    case ACTION_BML_SET_LEGACY_CLIENT_ROAMING_RESPONSE:                 return "ACTION_BML_SET_LEGACY_CLIENT_ROAMING_RESPONSE";
    case ACTION_BML_GET_LEGACY_CLIENT_ROAMING_REQUEST:                  return "ACTION_BML_GET_LEGACY_CLIENT_ROAMING_REQUEST";
    case ACTION_BML_GET_LEGACY_CLIENT_ROAMING_RESPONSE:                 return "ACTION_BML_GET_LEGACY_CLIENT_ROAMING_RESPONSE";
    case ACTION_BML_SET_CLIENT_ROAMING_REQUEST:                         return "ACTION_BML_SET_CLIENT_ROAMING_REQUEST";
    case ACTION_BML_SET_CLIENT_ROAMING_RESPONSE:                        return "ACTION_BML_SET_CLIENT_ROAMING_RESPONSE";
    case ACTION_BML_GET_CLIENT_ROAMING_REQUEST:                         return "ACTION_BML_GET_CLIENT_ROAMING_REQUEST";
    case ACTION_BML_GET_CLIENT_ROAMING_RESPONSE:                        return "ACTION_BML_GET_CLIENT_ROAMING_RESPONSE";
    case ACTION_BML_SET_CLIENT_BAND_STEERING_REQUEST:                   return "ACTION_BML_SET_CLIENT_BAND_STEERING_REQUEST";
    case ACTION_BML_SET_CLIENT_BAND_STEERING_RESPONSE:                  return "ACTION_BML_SET_CLIENT_BAND_STEERING_RESPONSE";
    case ACTION_BML_GET_CLIENT_BAND_STEERING_REQUEST:                   return "ACTION_BML_GET_CLIENT_BAND_STEERING_REQUEST";
    case ACTION_BML_GET_CLIENT_BAND_STEERING_RESPONSE:                  return "ACTION_BML_GET_CLIENT_BAND_STEERING_RESPONSE";
    case ACTION_BML_SET_IRE_ROAMING_REQUEST:                            return "ACTION_BML_SET_IRE_ROAMING_REQUEST";
    case ACTION_BML_SET_IRE_ROAMING_RESPONSE:                           return "ACTION_BML_SET_IRE_ROAMING_RESPONSE";
    case ACTION_BML_GET_IRE_ROAMING_REQUEST:                            return "ACTION_BML_GET_IRE_ROAMING_REQUEST";
    case ACTION_BML_GET_IRE_ROAMING_RESPONSE:                           return "ACTION_BML_GET_IRE_ROAMING_RESPONSE";
    case ACTION_BML_SET_LOAD_BALANCER_REQUEST:                          return "ACTION_BML_SET_LOAD_BALANCER_REQUEST";
    case ACTION_BML_SET_LOAD_BALANCER_RESPONSE:                         return "ACTION_BML_SET_LOAD_BALANCER_RESPONSE";
    case ACTION_BML_GET_LOAD_BALANCER_REQUEST:                          return "ACTION_BML_GET_LOAD_BALANCER_REQUEST";
    case ACTION_BML_GET_LOAD_BALANCER_RESPONSE:                         return "ACTION_BML_GET_LOAD_BALANCER_RESPONSE";
    case ACTION_BML_SET_SERVICE_FAIRNESS_REQUEST:                       return "ACTION_BML_SET_SERVICE_FAIRNESS_REQUEST";
    case ACTION_BML_SET_SERVICE_FAIRNESS_RESPONSE:                      return "ACTION_BML_SET_SERVICE_FAIRNESS_RESPONSE";
    case ACTION_BML_GET_SERVICE_FAIRNESS_REQUEST:                       return "ACTION_BML_GET_SERVICE_FAIRNESS_REQUEST";
    case ACTION_BML_GET_SERVICE_FAIRNESS_RESPONSE:                      return "ACTION_BML_GET_SERVICE_FAIRNESS_RESPONSE";
    case ACTION_BML_SET_CLIENT_ROAMING_PREFER_SIGNAL_STRENGTH_REQUEST:  return "ACTION_BML_SET_CLIENT_ROAMING_PREFER_SIGNAL_STRENGTH_REQUEST";
    case ACTION_BML_SET_CLIENT_ROAMING_PREFER_SIGNAL_STRENGTH_RESPONSE: return "ACTION_BML_SET_CLIENT_ROAMING_PREFER_SIGNAL_STRENGTH_RESPONSE";
    case ACTION_BML_GET_CLIENT_ROAMING_PREFER_SIGNAL_STRENGTH_REQUEST:  return "ACTION_BML_GET_CLIENT_ROAMING_PREFER_SIGNAL_STRENGTH_REQUEST";
    case ACTION_BML_GET_CLIENT_ROAMING_PREFER_SIGNAL_STRENGTH_RESPONSE: return "ACTION_BML_GET_CLIENT_ROAMING_PREFER_SIGNAL_STRENGTH_RESPONSE";
    case ACTION_BML_SET_DFS_REENTRY_REQUEST:                            return "ACTION_BML_SET_DFS_REENTRY_REQUEST";
    case ACTION_BML_SET_DFS_REENTRY_RESPONSE:                           return "ACTION_BML_SET_DFS_REENTRY_RESPONSE";
    case ACTION_BML_GET_DFS_REENTRY_REQUEST:                            return "ACTION_BML_GET_DFS_REENTRY_REQUEST";
    case ACTION_BML_GET_DFS_REENTRY_RESPONSE:                           return "ACTION_BML_GET_DFS_REENTRY_RESPONSE";
    case ACTION_BML_SET_RESTRICTED_CHANNELS_REQUEST:                    return "ACTION_BML_SET_RESTRICTED_CHANNELS_REQUEST";
    case ACTION_BML_SET_RESTRICTED_CHANNELS_RESPONSE:                   return "ACTION_BML_SET_RESTRICTED_CHANNELS_RESPONSE";
    case ACTION_BML_GET_RESTRICTED_CHANNELS_REQUEST:                    return "ACTION_BML_GET_RESTRICTED_CHANNELS_REQUEST";
    case ACTION_BML_GET_RESTRICTED_CHANNELS_RESPONSE:                   return "ACTION_BML_GET_RESTRICTED_CHANNELS_RESPONSE";
    case ACTION_BML_SET_CERTIFICATION_MODE_REQUEST:                     return "ACTION_BML_SET_CERTIFICATION_MODE_REQUEST";
    case ACTION_BML_SET_CERTIFICATION_MODE_RESPONSE:                    return "ACTION_BML_SET_CERTIFICATION_MODE_RESPONSE";
    case ACTION_BML_GET_CERTIFICATION_MODE_REQUEST:                     return "ACTION_BML_GET_CERTIFICATION_MODE_REQUEST";
    case ACTION_BML_GET_CERTIFICATION_MODE_RESPONSE:                    return "ACTION_BML_GET_CERTIFICATION_MODE_RESPONSE";
    case ACTION_BML_WIFI_CREDENTIALS_SET_REQUEST:                       return "ACTION_BML_WIFI_CREDENTIALS_SET_REQUEST";
    case ACTION_BML_WIFI_CREDENTIALS_SET_RESPONSE:                      return "ACTION_BML_WIFI_CREDENTIALS_SET_RESPONSE";
    case ACTION_BML_WIFI_CREDENTIALS_UPDATE_REQUEST:                    return "ACTION_BML_WIFI_CREDENTIALS_UPDATE_REQUEST";
    case ACTION_BML_WIFI_CREDENTIALS_UPDATE_RESPONSE:                   return "ACTION_BML_WIFI_CREDENTIALS_UPDATE_RESPONSE";
    case ACTION_BML_WIFI_CREDENTIALS_CLEAR_REQUEST:                     return "ACTION_BML_WIFI_CREDENTIALS_CLEAR_REQUEST";
    case ACTION_BML_WIFI_CREDENTIALS_CLEAR_RESPONSE:                    return "ACTION_BML_WIFI_CREDENTIALS_CLEAR_RESPONSE";
    case ACTION_BML_CHANGE_MODULE_LOGGING_LEVEL_REQUEST:                return "ACTION_BML_CHANGE_MODULE_LOGGING_LEVEL_REQUEST";
    case ACTION_BML_CHANGE_MODULE_LOGGING_LEVEL_RESPONSE:               return "ACTION_BML_CHANGE_MODULE_LOGGING_LEVEL_RESPONSE";
    case ACTION_BML_SET_VAP_LIST_CREDENTIALS_REQUEST:                   return "ACTION_BML_SET_VAP_LIST_CREDENTIALS_REQUEST";
    case ACTION_BML_SET_VAP_LIST_CREDENTIALS_RESPONSE:                  return "ACTION_BML_SET_VAP_LIST_CREDENTIALS_RESPONSE";
    case ACTION_BML_GET_VAP_LIST_CREDENTIALS_REQUEST:                   return "ACTION_BML_GET_VAP_LIST_CREDENTIALS_REQUEST";
    case ACTION_BML_GET_VAP_LIST_CREDENTIALS_RESPONSE:                  return "ACTION_BML_GET_VAP_LIST_CREDENTIALS_RESPONSE";
    case ACTION_BML_STEERING_SET_GROUP_REQUEST:                         return "ACTION_BML_STEERING_SET_GROUP_REQUEST";
    case ACTION_BML_STEERING_SET_GROUP_RESPONSE:                        return "ACTION_BML_STEERING_SET_GROUP_RESPONSE";
    case ACTION_BML_STEERING_CLIENT_SET_REQUEST:                        return "ACTION_BML_STEERING_CLIENT_SET_REQUEST";
    case ACTION_BML_STEERING_CLIENT_SET_RESPONSE:                       return "ACTION_BML_STEERING_CLIENT_SET_RESPONSE";
    case ACTION_BML_STEERING_EVENT_REGISTER_UNREGISTER_REQUEST:         return "ACTION_BML_STEERING_EVENT_REGISTER_UNREGISTER_REQUEST";
    case ACTION_BML_STEERING_EVENT_REGISTER_UNREGISTER_RESPONSE:        return "ACTION_BML_STEERING_EVENT_REGISTER_UNREGISTER_RESPONSE";
    case ACTION_BML_STEERING_CLIENT_DISCONNECT_REQUEST:                 return "ACTION_BML_STEERING_CLIENT_DISCONNECT_REQUEST";
    case ACTION_BML_STEERING_CLIENT_DISCONNECT_RESPONSE:                return "ACTION_BML_STEERING_CLIENT_DISCONNECT_RESPONSE";
    case ACTION_BML_STEERING_CLIENT_MEASURE_REQUEST:                    return "ACTION_BML_STEERING_CLIENT_MEASURE_REQUEST";
    case ACTION_BML_STEERING_CLIENT_MEASURE_RESPONSE:                   return "ACTION_BML_STEERING_CLIENT_MEASURE_RESPONSE";
    case ACTION_BML_STEERING_EVENT_PROBE_REQ_NOTIFICATION:              return "ACTION_BML_STEERING_EVENT_PROBE_REQ_NOTIFICATION";
    case ACTION_BML_STEERING_EVENT_CLIENT_CONNECT_NOTIFICATION:         return "ACTION_BML_STEERING_EVENT_CLIENT_CONNECT_NOTIFICATION";
    case ACTION_BML_STEERING_EVENT_CLIENT_DISCONNECT_NOTIFICATION:      return "ACTION_BML_STEERING_EVENT_CLIENT_DISCONNECT_NOTIFICATION";
    case ACTION_BML_STEERING_EVENT_CLIENT_ACTIVITY_NOTIFICATION:        return "ACTION_BML_STEERING_EVENT_CLIENT_ACTIVITY_NOTIFICATION";
    case ACTION_BML_STEERING_EVENT_SNR_XING_NOTIFICATION:               return "ACTION_BML_STEERING_EVENT_SNR_XING_NOTIFICATION";
    case ACTION_BML_STEERING_EVENT_SNR_NOTIFICATION:                    return "ACTION_BML_STEERING_EVENT_SNR_NOTIFICATION";
    case ACTION_BML_STEERING_EVENT_AUTH_FAIL_NOTIFICATION:              return "ACTION_BML_STEERING_EVENT_AUTH_FAIL_NOTIFICATION";
    case ACTION_BML_STEERING_EVENTS_UPDATE:                             return "ACTION_BML_STEERING_EVENTS_UPDATE";
    case ACTION_BML_TRIGGER_TOPOLOGY_QUERY:                             return "ACTION_BML_TRIGGER_TOPOLOGY_QUERY";
    case ACTION_BML_TOPOLOGY_RESPONSE:                                  return "ACTION_BML_TOPOLOGY_RESPONSE";
    case ACTION_BML_REGISTER_TOPOLOGY_QUERY:                            return "ACTION_BML_REGISTER_TOPOLOGY_QUERY";
    case ACTION_BML_UNREGISTER_TOPOLOGY_QUERY:                          return "ACTION_BML_UNREGISTER_TOPOLOGY_QUERY";
    case ACTION_BML_TRIGGER_CHANNEL_SELECTION_REQUEST:                  return "ACTION_BML_TRIGGER_CHANNEL_SELECTION_REQUEST";
    case ACTION_BML_TRIGGER_CHANNEL_SELECTION_RESPONSE:                 return "ACTION_BML_TRIGGER_CHANNEL_SELECTION_RESPONSE";
    case ACTION_BML_CHANNEL_SCAN_SET_CONTINUOUS_PARAMS_REQUEST:         return "ACTION_BML_CHANNEL_SCAN_SET_CONTINUOUS_PARAMS_REQUEST";
    case ACTION_BML_CHANNEL_SCAN_SET_CONTINUOUS_PARAMS_RESPONSE:        return "ACTION_BML_CHANNEL_SCAN_SET_CONTINUOUS_PARAMS_RESPONSE";
    case ACTION_BML_CHANNEL_SCAN_GET_CONTINUOUS_PARAMS_REQUEST:         return "ACTION_BML_CHANNEL_SCAN_GET_CONTINUOUS_PARAMS_REQUEST";
    case ACTION_BML_CHANNEL_SCAN_GET_CONTINUOUS_PARAMS_RESPONSE:        return "ACTION_BML_CHANNEL_SCAN_GET_CONTINUOUS_PARAMS_RESPONSE";
    case ACTION_BML_CHANNEL_SCAN_SET_CONTINUOUS_ENABLE_REQUEST:         return "ACTION_BML_CHANNEL_SCAN_SET_CONTINUOUS_ENABLE_REQUEST";
    case ACTION_BML_CHANNEL_SCAN_SET_CONTINUOUS_ENABLE_RESPONSE:        return "ACTION_BML_CHANNEL_SCAN_SET_CONTINUOUS_ENABLE_RESPONSE";
    case ACTION_BML_CHANNEL_SCAN_GET_CONTINUOUS_ENABLE_REQUEST:         return "ACTION_BML_CHANNEL_SCAN_GET_CONTINUOUS_ENABLE_REQUEST";
    case ACTION_BML_CHANNEL_SCAN_GET_CONTINUOUS_ENABLE_RESPONSE:        return "ACTION_BML_CHANNEL_SCAN_GET_CONTINUOUS_ENABLE_RESPONSE";
    case ACTION_BML_CHANNEL_SCAN_START_SCAN_REQUEST:                    return "ACTION_BML_CHANNEL_SCAN_START_SCAN_REQUEST";
    case ACTION_BML_CHANNEL_SCAN_START_SCAN_RESPONSE:                   return "ACTION_BML_CHANNEL_SCAN_START_SCAN_RESPONSE";
    case ACTION_BML_CHANNEL_SCAN_GET_RESULTS_REQUEST:                   return "ACTION_BML_CHANNEL_SCAN_GET_RESULTS_REQUEST";
    case ACTION_BML_CHANNEL_SCAN_GET_RESULTS_RESPONSE:                  return "ACTION_BML_CHANNEL_SCAN_GET_RESULTS_RESPONSE";
    case ACTION_BML_CLIENT_GET_CLIENT_LIST_REQUEST:                     return "ACTION_BML_CLIENT_GET_CLIENT_LIST_REQUEST";
    case ACTION_BML_CLIENT_GET_CLIENT_LIST_RESPONSE:                    return "ACTION_BML_CLIENT_GET_CLIENT_LIST_RESPONSE";
    case ACTION_BML_CLIENT_SET_CLIENT_REQUEST:                          return "ACTION_BML_CLIENT_SET_CLIENT_REQUEST";
    case ACTION_BML_CLIENT_SET_CLIENT_RESPONSE:                         return "ACTION_BML_CLIENT_SET_CLIENT_RESPONSE";
    case ACTION_BML_CLIENT_GET_CLIENT_REQUEST:                          return "ACTION_BML_CLIENT_GET_CLIENT_REQUEST";
    case ACTION_BML_CLIENT_GET_CLIENT_RESPONSE:                         return "ACTION_BML_CLIENT_GET_CLIENT_RESPONSE";
    case ACTION_BML_CLIENT_CLEAR_CLIENT_REQUEST:                        return "ACTION_BML_CLIENT_CLEAR_CLIENT_REQUEST";
    case ACTION_BML_CLIENT_CLEAR_CLIENT_RESPONSE:                       return "ACTION_BML_CLIENT_CLEAR_CLIENT_RESPONSE";
    case ACTION_BML_SET_CLIENT_ROAMING_11K_SUPPORT_REQUEST:             return "ACTION_BML_SET_CLIENT_ROAMING_11K_SUPPORT_REQUEST";
    case ACTION_BML_SET_CLIENT_ROAMING_11K_SUPPORT_RESPONSE:            return "ACTION_BML_SET_CLIENT_ROAMING_11K_SUPPORT_RESPONSE";
    case ACTION_BML_GET_CLIENT_ROAMING_11K_SUPPORT_REQUEST:             return "ACTION_BML_GET_CLIENT_ROAMING_11K_SUPPORT_REQUEST";
    case ACTION_BML_GET_CLIENT_ROAMING_11K_SUPPORT_RESPONSE:            return "ACTION_BML_GET_CLIENT_ROAMING_11K_SUPPORT_RESPONSE";
    case ACTION_BML_SET_SELECTION_CHANNEL_POOL_REQUEST:                 return "ACTION_BML_SET_SELECTION_CHANNEL_POOL_REQUEST";
    case ACTION_BML_SET_SELECTION_CHANNEL_POOL_RESPONSE:                return "ACTION_BML_SET_SELECTION_CHANNEL_POOL_RESPONSE";
    case ACTION_BML_GET_SELECTION_CHANNEL_POOL_REQUEST:                 return "ACTION_BML_GET_SELECTION_CHANNEL_POOL_REQUEST";
    case ACTION_BML_GET_SELECTION_CHANNEL_POOL_RESPONSE:                return "ACTION_BML_GET_SELECTION_CHANNEL_POOL_RESPONSE";
    case ACTION_BML_ENUM_END:                                           return "ACTION_BML_ENUM_END";
    }
    static std::string out_str = std::to_string(int(enum_value));
    return out_str.c_str();
}
inline std::ostream &operator<<(std::ostream &out, eActionOp_BML value) { return out << eActionOp_BML_str(value); }
// clang-format on
// Enum AutoPrint generated code snippet end


}; // close namespace: beerocks_message

#endif //_BEEROCKS/TLVF_BEEROCKS_MESSAGE_ACTION_H_
